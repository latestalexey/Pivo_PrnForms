#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Перем Идентификатор Экспорт;
Перем СтруктураМакета Экспорт;	 
Перем МассивНазначений Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

Функция ПечатьИНВ19(МассивОбъектов, ОбъектыПечати)
	
	КолонкаКодов = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	
	Если ПустаяСтрока(КолонкаКодов) Тогда
		
		КолонкаКодов = "Код";
		
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Документ.Ссылка                                       КАК Ссылка,
	|	Документ.Номер                                        КАК Номер,
	|	Документ.Дата                                         КАК Дата,
	|	Документ.Дата                                         КАК ДатаДокумента,
	|	Документ.Дата                                         КАК ДатаНачалаИнвентаризации,
	|	Документ.Организация                                  КАК Организация,
	|	Документ.Организация                                  КАК Руководители,
	|	Документ.Организация.Префикс                          КАК Префикс,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Магазин)                       КАК ПредставлениеПодразделения,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Склад)                         КАК СкладПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Организация)                   КАК ОрганизацияПредставление
	|ИЗ
	|	Документ.ПересчетТоваров КАК Документ
	|
	|ГДЕ
	|	Документ.Ссылка В (&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка                                                     КАК Ссылка,
	|	ВложенныйЗапрос.Номенклатура                                               КАК Номенклатура,
	|   ПРЕДСТАВЛЕНИЕ(ВложенныйЗапрос.Номенклатура)                                КАК НоменклатураПредставление,
	|   ПРЕДСТАВЛЕНИЕ(ВложенныйЗапрос.Характеристика)                              КАК ХарактеристикаПредставление,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное                            КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура." + КолонкаКодов + "                          КАК ТоварКод,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление                             КАК ЕдиницаИзмеренияПредставление,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Код                                       КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|	ВложенныйЗапрос.Характеристика                                             КАК Характеристика,
	|	ВложенныйЗапрос.РезультатНедостачаКолво                                    КАК РезультатНедостачаКолво,
	|	ВложенныйЗапрос.РезультатНедостачаСумма                                    КАК РезультатНедостачаСумма,
	|	ВложенныйЗапрос.РезультатИзлишекКолво                                      КАК РезультатИзлишекКолво,
	|	ВложенныйЗапрос.РезультатИзлишекСумма                                      КАК РезультатИзлишекСумма,
	|	ВложенныйЗапрос.НомерСтроки                                                КАК НомерСтроки
	|ИЗ (
	|	ВЫБРАТЬ
	|		Документ.Ссылка                                                        КАК Ссылка,
	|		Документ.Номенклатура                                                  КАК Номенклатура,
	|		ВЫБОР КОГДА Документ.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|			Документ.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ
	|			Документ.Упаковка.ЕдиницаИзмерения
	|		КОНЕЦ                                                                  КАК ЕдиницаИзмерения,
	|		Документ.Характеристика                                                КАК Характеристика,
	|		Документ.НомерСтроки                                                   КАК НомерСтроки,
	|       ВЫБОР 
	|           КОГДА 
	|               (Документ.КоличествоФакт - Документ.Количество) < 0 
	|             И (Документ.СуммаФакт - Документ.Сумма) < 0 
	|           ТОГДА
	|             -(Документ.КоличествоФакт - Документ.Количество)
	|           КОГДА 
	|               (Документ.КоличествоФакт - Документ.Количество) < 0 
	|             И (Документ.СуммаФакт - Документ.Сумма) >= 0 
	|           ТОГДА
	|             -(Документ.КоличествоФакт - Документ.Количество)
	|           ИНАЧЕ
	|             0
	|       КОНЕЦ КАК РезультатНедостачаКолво,
	|       ВЫБОР 
	|           КОГДА 
	|               (Документ.КоличествоФакт - Документ.Количество) < 0 
	|             И (Документ.СуммаФакт - Документ.Сумма) < 0 
	|           ТОГДА
	|             -(Документ.СуммаФакт - Документ.Сумма)
	|           КОГДА 
	|               (Документ.КоличествоФакт - Документ.Количество) < 0 
	|             И (Документ.СуммаФакт - Документ.Сумма) >= 0 
	|           ТОГДА
	|             (Документ.СуммаФакт - Документ.Сумма)
	|           ИНАЧЕ
	|             0
	|       КОНЕЦ КАК РезультатНедостачаСумма,
	|       ВЫБОР 
	|           КОГДА 
	|               (Документ.КоличествоФакт - Документ.Количество) < 0 
	|             И (Документ.СуммаФакт - Документ.Сумма) < 0 
	|           ТОГДА
	|             0
	|           КОГДА 
	|               (Документ.КоличествоФакт - Документ.Количество) < 0 
	|             И (Документ.СуммаФакт - Документ.Сумма) >= 0 
	|           ТОГДА
	|             0
	|           ИНАЧЕ
	|             (Документ.КоличествоФакт - Документ.Количество)
	|       КОНЕЦ КАК РезультатИзлишекКолво,
	|       ВЫБОР 
	|           КОГДА 
	|               (Документ.КоличествоФакт - Документ.Количество) < 0 
	|             И (Документ.СуммаФакт - Документ.Сумма) < 0 
	|           ТОГДА
	|             0
	|           КОГДА 
	|               (Документ.КоличествоФакт - Документ.Количество) < 0 
	|             И (Документ.СуммаФакт - Документ.Сумма) >= 0 
	|           ТОГДА
	|             0
	|           ИНАЧЕ
	|             (Документ.СуммаФакт - Документ.Сумма)
	|       КОНЕЦ КАК РезультатИзлишекСумма
	|	ИЗ
	|		Документ.ПересчетТоваров.Товары КАК Документ
	|	ГДЕ
	|		Документ.Ссылка В (&МассивДокументов)
	|		И Документ.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|       И Документ.КоличествоФакт-Документ.Количество <> 0
	|	) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|
	|ИТОГИ ПО
	|	Ссылка
	|");
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПересчетТоваров_ИНВ19";
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ДанныеПечати      = МассивРезультатов[0].Выбрать();
	ВыборкаПоДокументам = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ИНВ19");
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Выводим общие реквизиты шапки.
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		СведенияОбОрганизации    = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Организация,      ДанныеПечати.ДатаДокумента);
		
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ОбластьМакета.Параметры.НомерДокумента           = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДанныеПечати.Номер, Ложь, Истина);
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбОрганизации);
		ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОбОрганизации.КодПоОКПО;
				
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		НомерСтраницы = 2;
		
		ИтоговыеСуммы = Новый Структура;
		
		// Инициализация итогов по странице.
		
		ИтоговыеСуммы.Вставить("ИтогоРезультатНедостачаКолвоНаСтранице", 0);
		ИтоговыеСуммы.Вставить("ИтогоРезультатНедостачаСуммаНаСтранице", 0);
		ИтоговыеСуммы.Вставить("ИтогоРезультатИзлишекКолвоНаСтранице", 0);
		ИтоговыеСуммы.Вставить("ИтогоРезультатИзлишекСуммаНаСтранице", 0);
		
		// Инициализация итогов по документу.
		ИтоговыеСуммы.Вставить("ИтогоРезультатНедостачаКолво", 0);
		ИтоговыеСуммы.Вставить("ИтогоРезультатНедостачаСумма", 0);
		ИтоговыеСуммы.Вставить("ИтогоРезультатИзлишекКолво", 0);
		ИтоговыеСуммы.Вставить("ИтогоРезультатИзлишекСумма", 0);
		
		ДанныеСтроки = Новый Структура;
		ДанныеСтроки.Вставить("Номер", 0);
		ДанныеСтроки.Вставить("РезультатНедостачаКолво", 0);
		ДанныеСтроки.Вставить("РезультатНедостачаСумма", 0);
		ДанныеСтроки.Вставить("РезультатИзлишекКолво", 0);
		ДанныеСтроки.Вставить("РезультатИзлишекСумма", 0);
		
		
		// Создаем массив для проверки вывода.
		МассивВыводимыхОбластей = Новый Массив;
		
		// Выводим многострочную часть документа.
		ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ОбластьМакета           = Макет.ПолучитьОбласть("СтрокаТаблицы");
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
		ОбластьВсего            = Макет.ПолучитьОбласть("Всего");
		ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
		
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		КоличествоСтрок = ВыборкаПоДокументам.Количество();
		
		СтрокаТовары = ВыборкаПоДокументам.Выбрать();
		Пока СтрокаТовары.Следующий() Цикл
			
			ДанныеСтроки.Номер = ДанныеСтроки.Номер + 1;
			
			ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
			ОбластьМакета.Параметры.ТоварНаименование = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(
			СтрокаТовары.ТоварНаименование,
			СтрокаТовары.Характеристика);
			
			ДанныеСтроки.РезультатНедостачаКолво = СтрокаТовары.РезультатНедостачаКолво;
			ДанныеСтроки.РезультатНедостачаСумма = СтрокаТовары.РезультатНедостачаСумма;
			ДанныеСтроки.РезультатИзлишекКолво   = СтрокаТовары.РезультатИзлишекКолво;
			ДанныеСтроки.РезультатИзлишекСумма   = СтрокаТовары.РезультатИзлишекСумма;
			
			ОбластьМакета.Параметры.Заполнить(ДанныеСтроки);
			
			Если ДанныеСтроки.Номер = 1 Тогда // первая строка
				
				ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
				ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
				
			Иначе
				
				МассивВыводимыхОбластей.Очистить();
				МассивВыводимыхОбластей.Добавить(ОбластьМакета);
				МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
				
				Если ДанныеСтроки.Номер = КоличествоСтрок Тогда
					
					МассивВыводимыхОбластей.Добавить(ОбластьВсего);
					МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
					
				КонецЕсли;
				
				Если ДанныеСтроки.Номер <> 1 И Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
					
					ОбластьИтоговПоСтранице.Параметры.Заполнить(ИтоговыеСуммы);
					
					ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
					
					// Очистим итоги по странице.
					ИтоговыеСуммы.ИтогоРезультатНедостачаКолвоНаСтранице = 0;
					ИтоговыеСуммы.ИтогоРезультатНедостачаСуммаНаСтранице = 0;
					ИтоговыеСуммы.ИтогоРезультатИзлишекКолвоНаСтранице   = 0;
					ИтоговыеСуммы.ИтогоРезультатИзлишекСуммаНаСтранице   = 0;
					
					
					НомерСтраницы = НомерСтраницы + 1;
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
					ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
					
				КонецЕсли;
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			// Увеличим итоги по странице.
			
			ИтоговыеСуммы.ИтогоРезультатНедостачаКолвоНаСтранице = ИтоговыеСуммы.ИтогоРезультатНедостачаКолвоНаСтранице + ДанныеСтроки.РезультатНедостачаКолво;
			ИтоговыеСуммы.ИтогоРезультатНедостачаСуммаНаСтранице = ИтоговыеСуммы.ИтогоРезультатНедостачаСуммаНаСтранице + ДанныеСтроки.РезультатНедостачаСумма;
			ИтоговыеСуммы.ИтогоРезультатИзлишекКолвоНаСтранице   = ИтоговыеСуммы.ИтогоРезультатИзлишекКолвоНаСтранице   + ДанныеСтроки.РезультатИзлишекКолво;
			ИтоговыеСуммы.ИтогоРезультатИзлишекСуммаНаСтранице   = ИтоговыеСуммы.ИтогоРезультатИзлишекСуммаНаСтранице   + ДанныеСтроки.РезультатИзлишекСумма;
			
			// Увеличим итоги по документу.
			
			ИтоговыеСуммы.ИтогоРезультатНедостачаКолво  = ИтоговыеСуммы.ИтогоРезультатНедостачаКолво + ДанныеСтроки.РезультатНедостачаКолво;
			ИтоговыеСуммы.ИтогоРезультатНедостачаСумма  = ИтоговыеСуммы.ИтогоРезультатНедостачаСумма + ДанныеСтроки.РезультатНедостачаСумма;
			ИтоговыеСуммы.ИтогоРезультатИзлишекКолво    = ИтоговыеСуммы.ИтогоРезультатИзлишекКолво   + ДанныеСтроки.РезультатИзлишекКолво;
			ИтоговыеСуммы.ИтогоРезультатИзлишекСумма    = ИтоговыеСуммы.ИтогоРезультатИзлишекСумма   + ДанныеСтроки.РезультатИзлишекСумма;
			
		КонецЦикла;
		
		Если ДанныеСтроки.Номер = 0 Тогда // шапка не выводилась
			
			ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
			ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
			
		КонецЕсли;
		
		
		// Выводим итоги по последней странице.
		ОбластьИтоговПоСтранице.Параметры.Заполнить(ИтоговыеСуммы);
		
		ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
		
		// Выводим итоги по документу в целом.
		
		ОбластьВсего.Параметры.Заполнить(ИтоговыеСуммы);
		
		ТабличныйДокумент.Вывести(ОбластьВсего);
		
		// Выводим подвал документа
		ОбластьПодвала.Параметры.Заполнить(ДанныеПечати);
		
		Руководители = ФормированиеПечатныхФормСервер.ОтветственныеЛицаОрганизаций(ДанныеПечати.Руководители, ДанныеПечати.Дата);
		ОбластьПодвала.Параметры.ФИОБухгалтера       = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Руководители.ГлавныйБухгалтер);
		
		ТабличныйДокумент.Вывести(ОбластьПодвала);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, СтруктураМакета.Идентификатор) Тогда
		ПодготовленныйТабДок = ПечатьИНВ19(МассивОбъектов, ОбъектыПечати);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, СтруктураМакета.Идентификатор, СтруктураМакета.Представление, ПодготовленныйТабДок);
	КонецЕсли;
	
	КоллекцияПечатныхФорм[0].ТабличныйДокумент = ПодготовленныйТабДок;
	
КонецПроцедуры

//ПЕРЕНЕСТИ В НОВЫЙ МАКЕТ
Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке("1.0");
	
	СписокОбъектов = "";
	Для Каждого Строка Из СтруктураМакета.ТипДокумента Цикл  
		СписокОбъектов = СписокОбъектов + ?(СписокОбъектов = "", Строка, ", " + Строка);
	КонецЦикла;
	
	ПараметрыРегистрации.Вид 			 = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиПечатнаяФорма();
	ПараметрыРегистрации.Версия 		 = ЭтотОбъект.Метаданные().Комментарий; //Версия печатной формы, можно устанавливать в ручную
	ПараметрыРегистрации.БезопасныйРежим = Ложь;
	ПараметрыРегистрации.Назначение      = СтруктураМакета.ТипДокумента;
    ПараметрыРегистрации.Наименование	 = "Внешняя печатная форма: " + СтруктураМакета.Представление;
	ПараметрыРегистрации.Информация		 = СписокОбъектов;        			    //Перечисление объектов для печати
	
	НоваяКоманда 						 = ПараметрыРегистрации.Команды.Добавить();
	НоваяКоманда.Представление 			 = НСтр("ru = '" + СтруктураМакета.Представление + " " + СтруктураМакета.ПрефиксВПФ + "'");
	НоваяКоманда.Идентификатор 			 = СтруктураМакета.Идентификатор;
	НоваяКоманда.Использование 			 = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();
	НоваяКоманда.ПоказыватьОповещение 	 = Истина;
	НоваяКоманда.Модификатор 			 = "ПечатьMXL";
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Идентификатор	= "ИНВ19"; 						 //Идентификатор внешней печатной формы (М11)
Представление   = "Сличительная ведемость ИНВ19"; //Имя команды в интерфейсе (M-11 (Требование-накладная))
ПрефиксВПФ 	 	= "СВ_ИТИ"; 				 	 //Префикс добавляемый к имени команды интерфейса, для отделения от встроенных команд (ХХХХХХХ)

СтруктураМакета = Новый Структура("ТипДокумента, Идентификатор, Представление, ПрефиксВПФ");

МассивНазначений = Новый Массив; //Массив объектов метаданных, для которых будут определены печатная форма
МассивНазначений.Добавить("Документ.ПересчетТоваров");

СтруктураМакета.ТипДокумента  = МассивНазначений;
СтруктураМакета.Идентификатор = Идентификатор;
СтруктураМакета.Представление = Представление; 
СтруктураМакета.ПрефиксВПФ    = ПрефиксВПФ;

ПараметрыВывода 	  = УправлениеПечатью.ПодготовитьСтруктуруПараметровВывода();

 #КонецЕсли

