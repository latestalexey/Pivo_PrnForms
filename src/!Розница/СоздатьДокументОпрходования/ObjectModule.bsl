#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Перем Идентификатор Экспорт;
Перем СтруктураМакета Экспорт;	 
Перем МассивНазначений Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

Функция ПечатьИНВ19(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПересчетТоваров_ИНВ19";
	
	// Зададим параметры макета
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ПересчетТоваров.Ссылка КАК ПересчетТоваров
	             |ПОМЕСТИТЬ ВТ_Документы
	             |ИЗ
	             |	Документ.ПересчетТоваров КАК ПересчетТоваров
	             |ГДЕ
	             |	ПересчетТоваров.Ссылка В(&МассивДокументов)
	             |
	             |ИНДЕКСИРОВАТЬ ПО
	             |	ПересчетТоваров
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ВТ_Документы.ПересчетТоваров.Ссылка КАК ПересчетТоваровСсылка,
	             |	ВТ_Документы.ПересчетТоваров.Магазин КАК Магазин,
	             |	ВТ_Документы.ПересчетТоваров.Организация КАК Организация,
	             |	ВТ_Документы.ПересчетТоваров.Склад КАК Склад,
	             |	ВТ_Документы.ПересчетТоваров.Дата КАК Дата,
	             |	МАКСИМУМ(ПредыдущиеПересчетыТоваров.Дата) КАК ДатаПредыдущейИнвентариации
	             |ПОМЕСТИТЬ ВТ_ПредыдущиеПериоды
	             |ИЗ
	             |	ВТ_Документы КАК ВТ_Документы
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПересчетТоваров КАК ПредыдущиеПересчетыТоваров
	             |		ПО (ПредыдущиеПересчетыТоваров.Проведен)
	             |			И (НАЧАЛОПЕРИОДА(ВТ_Документы.ПересчетТоваров.Дата, ДЕНЬ) > ПредыдущиеПересчетыТоваров.Дата)
	             |			И ВТ_Документы.ПересчетТоваров.Магазин = ПредыдущиеПересчетыТоваров.Магазин
	             |			И ВТ_Документы.ПересчетТоваров.Организация = ПредыдущиеПересчетыТоваров.Организация
	             |			И ВТ_Документы.ПересчетТоваров.Склад = ПредыдущиеПересчетыТоваров.Склад
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ВТ_Документы.ПересчетТоваров.Ссылка,
	             |	ВТ_Документы.ПересчетТоваров.Магазин,
	             |	ВТ_Документы.ПересчетТоваров.Организация,
	             |	ВТ_Документы.ПересчетТоваров.Склад,
	             |	ВТ_Документы.ПересчетТоваров.Дата
	             |
	             |ИНДЕКСИРОВАТЬ ПО
	             |	Магазин,
	             |	Организация,
	             |	Дата,
	             |	ДатаПредыдущейИнвентариации
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ОтчетОРозничныхПродажах.Ссылка КАК ОтчетОРознПродажах,
	             |	ЕстьNull(ОприходованиеТоваров.Ссылка,"""") КАК ОприходованиеТоваров
	             |ИЗ
	             |	ВТ_ПредыдущиеПериоды КАК ВТ_ПредыдущиеПериоды
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	             |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОприходованиеТоваров КАК ОприходованиеТоваров
	             |			ПО ОтчетОРозничныхПродажах.Ссылка = ОприходованиеТоваров.ДокументОснование
	             |				И (ОприходованиеТоваров.АналитикаХозяйственнойОперации = &ОприходованияОтрицательныхОстатков)
				 |				И (ОприходованиеТоваров.Проведен)
	             |		ПО ВТ_ПредыдущиеПериоды.Магазин = ОтчетОРозничныхПродажах.Магазин
	             |			И ВТ_ПредыдущиеПериоды.Организация = ОтчетОРозничныхПродажах.Организация
	             |			И ВТ_ПредыдущиеПериоды.Дата >= ОтчетОРозничныхПродажах.Дата
	             |			И ВТ_ПредыдущиеПериоды.ДатаПредыдущейИнвентариации <= ОтчетОРозничныхПродажах.Дата
	             |ГДЕ
	             |	ОтчетОРозничныхПродажах.Проведен";
	Запрос.УстановитьПараметр("ОприходованияОтрицательныхОстатков", Справочники.ИТИКонстанты.АналитикаХозоперацииОприходованиеДляМинусовПоПродажам.Указатель);
	Запрос.УстановитьПараметр("МассивДокументов",МассивОбъектов);
	Макет=ПолучитьМакет("ПФ_MXL_СписокДокументоа");
	Область=Макет.ПолучитьОбласть("Шапка");
	ТабличныйДокумент.Вывести(Область);
	Результат=Запрос.Выполнить();
	Область=Макет.ПолучитьОбласть("Строка");
	Если Не Результат.Пустой() Тогда
		Выборка=Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Область.Параметры.Заполнить(Выборка);
			Если Не ЗначениеЗаполнено(Выборка.ОприходованиеТоваров) Тогда
				Док=ИТИМодульСервер.СформироватьДокументОприходование(Выборка.ОтчетОРознПродажах);
				Область.Параметры.ОприходованиеТоваров=Док.Ссылка;
			КонецЕсли;
			ТабличныйДокумент.Вывести(Область);
		КонецЦикла;
	КонецЕсли;
	ТабличныйДокумент.Защита=Истина;
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, СтруктураМакета.Идентификатор) Тогда
		ПодготовленныйТабДок = ПечатьИНВ19(МассивОбъектов, ОбъектыПечати);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, СтруктураМакета.Идентификатор, СтруктураМакета.Представление, ПодготовленныйТабДок);
	КонецЕсли;
	
	КоллекцияПечатныхФорм[0].ТабличныйДокумент = ПодготовленныйТабДок;
	
КонецПроцедуры

//ПЕРЕНЕСТИ В НОВЫЙ МАКЕТ
Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке("1.0.0.0");
	
	СписокОбъектов = "";
	Для Каждого Строка Из СтруктураМакета.ТипДокумента Цикл  
		СписокОбъектов = СписокОбъектов + ?(СписокОбъектов = "", Строка, ", " + Строка);
	КонецЦикла;
	
	ПараметрыРегистрации.Вид 			 = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиПечатнаяФорма();
	ПараметрыРегистрации.Версия 		 = ЭтотОбъект.Метаданные().Комментарий; //Версия печатной формы, можно устанавливать в ручную
	ПараметрыРегистрации.БезопасныйРежим = Ложь;
	ПараметрыРегистрации.Назначение      = СтруктураМакета.ТипДокумента;
    ПараметрыРегистрации.Наименование	 = "Внешняя печатная форма: " + СтруктураМакета.Представление;
	ПараметрыРегистрации.Информация		 = СписокОбъектов;        			    //Перечисление объектов для печати
	
	НоваяКоманда 						 = ПараметрыРегистрации.Команды.Добавить();
	НоваяКоманда.Представление 			 = НСтр("ru = '" + СтруктураМакета.Представление + " " + СтруктураМакета.ПрефиксВПФ + "'");
	НоваяКоманда.Идентификатор 			 = СтруктураМакета.Идентификатор;
	НоваяКоманда.Использование 			 = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();
	НоваяКоманда.ПоказыватьОповещение 	 = Истина;
	НоваяКоманда.Модификатор 			 = "ПечатьMXL";
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Идентификатор	= "ЗакрытьМинуса"; 						 //Идентификатор внешней печатной формы (М11)
Представление   = "Создать оприходования(за межинвентаризационный период)"; //Имя команды в интерфейсе (M-11 (Требование-накладная))
ПрефиксВПФ 	 	= ""; 				 	 //Префикс добавляемый к имени команды интерфейса, для отделения от встроенных команд (ХХХХХХХ)

СтруктураМакета = Новый Структура("ТипДокумента, Идентификатор, Представление, ПрефиксВПФ");

МассивНазначений = Новый Массив; //Массив объектов метаданных, для которых будут определены печатная форма
МассивНазначений.Добавить("Документ.ПересчетТоваров");

СтруктураМакета.ТипДокумента  = МассивНазначений;
СтруктураМакета.Идентификатор = Идентификатор;
СтруктураМакета.Представление = Представление; 
СтруктураМакета.ПрефиксВПФ    = ПрефиксВПФ;

ПараметрыВывода 	  = УправлениеПечатью.ПодготовитьСтруктуруПараметровВывода();

 #КонецЕсли

