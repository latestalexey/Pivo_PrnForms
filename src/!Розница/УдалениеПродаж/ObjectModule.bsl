
Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = Новый Структура;
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма"); //может быть - ПечатнаяФорма, ЗаполнениеОбъекта, ДополнительныйОтчет, СозданиеСвязанныхОбъектов... 
	
	МассивНазначений = Новый Массив;
	МассивНазначений.Добавить("Документ.ОтчетОРозничныхПродажах"); //Указываем документ к которому делаем внешнюю печ. форму
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование", "Удаление документа"); //имя под которым обработка будет зарегестрирована в справочнике внешних обработок
	ПараметрыРегистрации.Вставить("БезопасныйРежим", ЛОЖЬ);
	ПараметрыРегистрации.Вставить("Версия", "1.0"); 
	ПараметрыРегистрации.Вставить("Информация", "Удаление Отчёта о розничных продажах и связанных документов"); 
	
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	ДобавитьКоманду(ТаблицаКоманд, "Удаление документов продажи", "УдалениеДокумента", "ВызовСерверногоМетода", Истина, "ПечатьMXL");
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);

	Возврат ПараметрыРегистрации;
	
КонецФункции

Функция ПолучитьТаблицуКоманд()
	
	Команды = Новый ТаблицаЗначений;
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));//как будет выглядеть описание печ.формы для пользователя
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка")); //имя макета печ.формы
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка")); //ВызовСерверногоМетода
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	Возврат Команды;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")

	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление; 
	НоваяКоманда.Идентификатор = Идентификатор;
	НоваяКоманда.Использование = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;

КонецПроцедуры

Функция СформироватьПечатнуюФорму(МассивОбъектов, ОбъектыПечати)

	Для Каждого СсылкаНаДокумент Из МассивОбъектов Цикл
		// Удалим документ "Кассовая смена"	
		Если ЗначениеЗаполнено(СсылкаНаДокумент.КассоваяСмена) Тогда
			КассоваяСменаОбъект = СсылкаНаДокумент.КассоваяСмена.ПолучитьОбъект();
			Попытка
				КассоваяСменаОбъект.Удалить();
			Исключение
			КонецПопытки;
		КонецЕсли;
		
		// Удалим документы "Отчет о розничных продажах", "Сборка товаров", "Оприходование товаров", "Выемка денежных средств из кассы ККМ"
		ЗапросПодчиненных = Новый Запрос(
		"ВЫБРАТЬ
		|	СвязанныеДокументы.Ссылка
		|ИЗ
		|	КритерийОтбора.СвязанныеДокументы(&СсылкаНаДокумент) КАК СвязанныеДокументы");
		ЗапросПодчиненных.УстановитьПараметр("СсылкаНаДокумент", СсылкаНаДокумент);
		
		УдалитьДокументыПоВыборке(ЗапросПодчиненных.Выполнить().Выбрать());
		
		// Закроем форму и удалим документ-основание
		ДокОбъект = СсылкаНаДокумент.ПолучитьОбъект();
		Попытка
			ДокОбъект.УстановитьПометкуУдаления(Истина);
		Исключение
		КонецПопытки;
	КонецЦикла;
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Область("R1C1").Текст="Связные документы удалены. Отчеты о розн. продажах помечены на удаление";
	Возврат ТабличныйДокумент;

КонецФункции

Процедура УдалитьДокументыПоВыборке(ВыборкаДокументов)
	Пока ВыборкаДокументов.Следующий() Цикл
		Если ТипЗнч(ВыборкаДокументов.Ссылка)=Тип("ДокументСсылка.СписаниеТоваров") и ВыборкаДокументов.Ссылка.АналитикаХозяйственнойОперации=Справочники.АналитикаХозяйственныхОпераций.СкидкиПодарки Тогда
			//Повторим операцию
			ЗапросПодчиненных = Новый Запрос(
			"ВЫБРАТЬ
			|	СвязанныеДокументы.Ссылка
			|ИЗ
			|	КритерийОтбора.СвязанныеДокументы(&СсылкаНаДокумент) КАК СвязанныеДокументы");
			ЗапросПодчиненных.УстановитьПараметр("СсылкаНаДокумент",ВыборкаДокументов.Ссылка);
			УдалитьДокументыПоВыборке(ЗапросПодчиненных.Выполнить().Выбрать());
		КонецЕсли;	
		ДокОбъект = ВыборкаДокументов.Ссылка.ПолучитьОбъект();
		Попытка
			Текст = Строка(ДокОбъект) + " удалён";
			ДокОбъект.Удалить();
		Исключение
			Текст=ОписаниеОшибки();
		КонецПопытки;
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = Текст;
		Сообщение.Сообщить();
	КонецЦикла;
КонецПроцедуры
&НаКлиенте
Процедура ЗакрытьФорму(СсылкаНаДокумент) Экспорт
	
	Форма = СсылкаНаДокумент.ПолучитьФорму("ФормаДокумента");
	Форма.Закрыть();
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "УдалениеДокументов", "Удаление документов", СформироватьПечатнуюФорму(МассивОбъектов, ОбъектыПечати));

КонецПроцедуры // Печать()