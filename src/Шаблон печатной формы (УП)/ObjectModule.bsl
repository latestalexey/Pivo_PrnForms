#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Перем Идентификатор Экспорт;
Перем СтруктураМакета Экспорт;	 
Перем МассивНазначений Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Формирует и возвращает текст запроса для выборки данных,
// необходимых для формирования печатной формы
Функция ПолучитьТекстЗапросаДляФормированияПечатнойФормы1()
	
	ТекстЗапроса = "";
	
	Возврат ТекстЗапроса;

КонецФункции

// Функция формирования печатного документа
Функция ПечатьДокумента1(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб			= Истина;                                                                   
	ТабДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ИмяПараметровПечати	= "ПараметрыПечати_ХХХХХХХХХХХХХХХХХХХХХХХХХХХХХХ";
	
	Макет = ЭтотОбъект.ПолучитьМакет("ПФ_MXL____________");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст = ПолучитьТекстЗапросаДляФормированияПечатнойФормы1(); //Можно запрос писать и тут
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить());

	Результат = Запрос.Выполнить();

	Если НЕ Результат.Пустой() Тогда

		ПервыйДокумент = Истина;

		ВыборкаПоДокументам = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Документ");
		
		Пока ВыборкаПоДокументам.Следующий() Цикл

			Если Не ПервыйДокумент Тогда
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			Иначе
				ПервыйДокумент = Ложь;
			КонецЕсли;
			
			НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
			
			// Шапка
			Область = Макет.ПолучитьОбласть("Шапка");
			Область.Параметры.Заполнить(ВыборкаПоДокументам);
			ТабДокумент.Вывести(Область);

			// Строки
			ВыборкаПоСтрокам = ВыборкаПоДокументам.Выбрать(ОбходРезультатаЗапроса.Прямой);
			Пока ВыборкаПоСтрокам.Следующий() Цикл
				Область = Макет.ПолучитьОбласть("Строка");
				Область.Параметры.Заполнить(ВыборкаПоСтрокам);
				ТабДокумент.Вывести(Область);
			КонецЦикла;
			
			// Подвал
			Область = Макет.ПолучитьОбласть("Подвал");
			Область.Параметры.Заполнить(ВыборкаПоДокументам);
			ТабДокумент.Вывести(Область);
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Документ);

		КонецЦикла;
		
	КонецЕсли;
			
	Возврат ТабДокумент;

КонецФункции


Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, СтруктураМакета.Идентификатор) Тогда
		ПодготовленныйТабДок = ПечатьДокумента(МассивОбъектов, ОбъектыПечати);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, СтруктураМакета.Идентификатор, СтруктураМакета.Представление, ПодготовленныйТабДок);
	КонецЕсли;
	
	КоллекцияПечатныхФорм[0].ТабличныйДокумент = ПодготовленныйТабДок;
	
КонецПроцедуры

//ПЕРЕНЕСТИ В НОВЫЙ МАКЕТ
Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке("1.0");
	
	СписокОбъектов = "";
	Для Каждого Строка Из СтруктураМакета.ТипДокумента Цикл  
		СписокОбъектов = СписокОбъектов + ?(СписокОбъектов = "", Строка, ", " + Строка);
	КонецЦикла;
	
	ПараметрыРегистрации.Вид 			 = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиПечатнаяФорма();
	ПараметрыРегистрации.Версия 		 = ЭтотОбъект.Метаданные().Комментарий; //Версия печатной формы, можно устанавливать в ручную
	ПараметрыРегистрации.БезопасныйРежим = Ложь;
	ПараметрыРегистрации.Назначение      = СтруктураМакета.ТипДокумента;
    ПараметрыРегистрации.Наименование	 = "Внешняя печатная форма: " + СтруктураМакета.Представление;
	ПараметрыРегистрации.Информация		 = СписокОбъектов;        			    //Перечисление объектов для печати
	
	НоваяКоманда 						 = ПараметрыРегистрации.Команды.Добавить();
	НоваяКоманда.Представление 			 = НСтр("ru = '" + СтруктураМакета.Представление + " " + СтруктураМакета.ПрефиксВПФ + "'");
	НоваяКоманда.Идентификатор 			 = СтруктураМакета.Идентификатор;
	НоваяКоманда.Использование 			 = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();
	НоваяКоманда.ПоказыватьОповещение 	 = Истина;
	НоваяКоманда.Модификатор 			 = "ПечатьMXL";
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Идентификатор	= "___"; 						 //Идентификатор внешней печатной формы (М11)
Представление   = "___________________________"; //Имя команды в интерфейсе (M-11 (Требование-накладная))
ПрефиксВПФ 	 	= "_________"; 				 	 //Префикс добавляемый к имени команды интерфейса, для отделения от встроенных команд (ХХХХХХХ)

СтруктураМакета = Новый Структура("ТипДокумента, Идентификатор, Представление, ПрефиксВПФ");

МассивНазначений = Новый Массив; //Массив объектов метаданных, для которых будут определены печатная форма
МассивНазначений.Добавить("Документ.___________________");
//МассивНазначений.Добавить("Документ.___________________");
//МассивНазначений.Добавить("Документ.___________________");

СтруктураМакета.ТипДокумента  = МассивНазначений;
СтруктураМакета.Идентификатор = Идентификатор;
СтруктураМакета.Представление = Представление; 
СтруктураМакета.ПрефиксВПФ    = ПрефиксВПФ;

ПараметрыВывода 	  = УправлениеПечатью.ПодготовитьСтруктуруПараметровВывода();

//ПЕРЕНЕСТИ В НОВЫЙ МАКЕТ

//Макет = ЭтотОбъект.ПолучитьМакет("ПФ_MXL____________");

 #КонецЕсли

