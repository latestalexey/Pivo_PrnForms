Перем мВалютаРегламентированногоУчета Экспорт;
Перем ВидФормы Экспорт;
Перем НаименованиеФормы	Экспорт;
Перем РелизФормы	Экспорт;
Перем ДатаИзмененияФормы Экспорт;
Перем КомментарийФормы Экспорт;
Перем НазваниеКнопки Экспорт;
Перем НазваниеМеню Экспорт;
Перем КартинкаКнопки Экспорт;
                                 
Функция НапечататьПриходРасходСРозничныхСкладовВЦенахАТТ(Док, ВалютаРегламентированногоУчета, ЭтоПриход) Экспорт

	ТекстНетДвижений = "Данным документом не выполнен приход ни на один розничный склад!";
	ТекстВсегоПринятоОтпущено = "Всего принято ";
	
	Запрос=Новый Запрос;

	Запрос.УстановитьПараметр("Док", Док);
	Запрос.УстановитьПараметр("МоментЦен", Новый Граница(Док.ПолучитьОбъект().МоментВремени(),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Склад", Док.СкладПолучатель);
	
	СпГрупп=Новый СписокЗначений;
	СпГрупп.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000000128"));
	СпГрупп.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000001369"));
	СпГрупп.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000001655"));
	Запрос.УстановитьПараметр("СпГрупп", СпГрупп);
	
	Запрос.Текст="ВЫБРАТЬ
	             |	ПеремещениеТоваров.СкладПолучатель КАК Склад,
	             |	ВложенныйЗапрос.Номенклатура КАК НоменклатураСсылка,
	             |	ВложенныйЗапрос.Номенклатура.Представление КАК Номенклатура,
	             |	ВложенныйЗапрос.Номенклатура.Код КАК Код,
	             |	ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Представление КАК ЕдиницаИзмерения,
	             |	"""" КАК Характеристика,
	             |	"""" КАК Серия,
	             |	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	             |	СРЕДНЕЕ(ЕСТЬNULL(ЦеныАТТСрезПоследних.Цена, 0)) КАК ЦенаАТТ,
	             |	СУММА(ВложенныйЗапрос.Количество * ЕСТЬNULL(ЦеныАТТСрезПоследних.Цена, 0)) КАК СуммаПродажная,
	             |	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки
	             |ИЗ
	             |	(ВЫБРАТЬ
	             |		ПеремещениеТоваров.Ссылка КАК Ссылка,
	             |		ПеремещениеТоваровТовары.Номенклатура КАК Номенклатура,
	             |		ПеремещениеТоваровТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	             |		ПеремещениеТоваровТовары.Количество КАК Количество,
	             |		ПеремещениеТоваровТовары.НомерСтроки КАК НомерСтроки
	             |	ИЗ
	             |		Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	             |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	             |			ПО ПеремещениеТоваровТовары.Ссылка = ПеремещениеТоваров.Ссылка
	             |	ГДЕ
	             |		ПеремещениеТоваров.Ссылка = &Док
	             |	
	             |	ОБЪЕДИНИТЬ ВСЕ
	             |	
	             |	ВЫБРАТЬ
	             |		ПеремещениеТоваров.Ссылка,
	             |		ПеремещениеТоваровВозвратнаяТара.Номенклатура,
	             |		ПеремещениеТоваровВозвратнаяТара.Номенклатура.ЕдиницаХраненияОстатков,
	             |		ПеремещениеТоваровВозвратнаяТара.Количество,
	             |		ПеремещениеТоваровВозвратнаяТара.НомерСтроки
	             |	ИЗ
	             |		Документ.ПеремещениеТоваров.ВозвратнаяТара КАК ПеремещениеТоваровВозвратнаяТара
	             |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	             |			ПО ПеремещениеТоваровВозвратнаяТара.Ссылка = ПеремещениеТоваров.Ссылка
	             |	ГДЕ
	             |		ПеремещениеТоваров.Ссылка = &Док) КАК ВложенныйЗапрос
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	             |		ПО ВложенныйЗапрос.Ссылка = ПеремещениеТоваров.Ссылка
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныАТТ.СрезПоследних(
	             |				&МоментЦен,
	             |				НЕ Номенклатура В ИЕРАРХИИ (&СпГрупп)
	             |					И Склад = &Склад) КАК ЦеныАТТСрезПоследних
	             |		ПО ВложенныйЗапрос.Номенклатура = ЦеныАТТСрезПоследних.Номенклатура
	             |ГДЕ
	             |	ПеремещениеТоваров.Ссылка = &Док
	             |	И НЕ ВложенныйЗапрос.Номенклатура В ИЕРАРХИИ(&СпГрупп)
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПеремещениеТоваров.СкладПолучатель,
	             |	ВложенныйЗапрос.Номенклатура,
	             |	ВложенныйЗапрос.Номенклатура.Представление,
	             |	ВложенныйЗапрос.Номенклатура.Код,
	             |	ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Представление,
	             |	ВложенныйЗапрос.НомерСтроки
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	НомерСтроки";
	
	РезультатЗапросаТовар = Запрос.Выполнить();
	
	Запрос.Текст="ВЫБРАТЬ
	             |	ПеремещениеТоваров.СкладПолучатель КАК Склад,
	             |	ВложенныйЗапрос.Номенклатура КАК НоменклатураСсылка,
	             |	ВложенныйЗапрос.Номенклатура.Представление КАК Номенклатура,
	             |	ВложенныйЗапрос.Номенклатура.Код КАК Код,
	             |	ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Представление КАК ЕдиницаИзмерения,
	             |	"""" КАК Характеристика,
	             |	"""" КАК Серия,
	             |	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	             |	СРЕДНЕЕ(ЕСТЬNULL(ЦеныАТТСрезПоследних.Цена, 0)) КАК ЦенаАТТ,
	             |	СУММА(ВложенныйЗапрос.Количество * ЕСТЬNULL(ЦеныАТТСрезПоследних.Цена, 0)) КАК СуммаПродажная,
	             |	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки
	             |ИЗ
	             |	(ВЫБРАТЬ
	             |		ПеремещениеТоваров.Ссылка КАК Ссылка,
	             |		ПеремещениеТоваровТовары.Номенклатура КАК Номенклатура,
	             |		ПеремещениеТоваровТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	             |		ПеремещениеТоваровТовары.Количество КАК Количество,
	             |		ПеремещениеТоваровТовары.НомерСтроки КАК НомерСтроки
	             |	ИЗ
	             |		Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	             |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	             |			ПО ПеремещениеТоваровТовары.Ссылка = ПеремещениеТоваров.Ссылка
	             |	ГДЕ
	             |		ПеремещениеТоваров.Ссылка = &Док
	             |	
	             |	ОБЪЕДИНИТЬ ВСЕ
	             |	
	             |	ВЫБРАТЬ
	             |		ПеремещениеТоваров.Ссылка,
	             |		ПеремещениеТоваровВозвратнаяТара.Номенклатура,
	             |		ПеремещениеТоваровВозвратнаяТара.Номенклатура.ЕдиницаХраненияОстатков,
	             |		ПеремещениеТоваровВозвратнаяТара.Количество,
	             |		ПеремещениеТоваровВозвратнаяТара.НомерСтроки
	             |	ИЗ
	             |		Документ.ПеремещениеТоваров.ВозвратнаяТара КАК ПеремещениеТоваровВозвратнаяТара
	             |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	             |			ПО ПеремещениеТоваровВозвратнаяТара.Ссылка = ПеремещениеТоваров.Ссылка
	             |	ГДЕ
	             |		ПеремещениеТоваров.Ссылка = &Док) КАК ВложенныйЗапрос
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	             |		ПО ВложенныйЗапрос.Ссылка = ПеремещениеТоваров.Ссылка
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныАТТ.СрезПоследних(
	             |				&МоментЦен,
	             |				Номенклатура В ИЕРАРХИИ (&СпГрупп)
	             |					И Склад = &Склад) КАК ЦеныАТТСрезПоследних
	             |		ПО ВложенныйЗапрос.Номенклатура = ЦеныАТТСрезПоследних.Номенклатура
	             |ГДЕ
	             |	ПеремещениеТоваров.Ссылка = &Док
	             |	И ВложенныйЗапрос.Номенклатура В ИЕРАРХИИ(&СпГрупп)
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПеремещениеТоваров.СкладПолучатель,
	             |	ВложенныйЗапрос.Номенклатура,
	             |	ВложенныйЗапрос.Номенклатура.Представление,
	             |	ВложенныйЗапрос.Номенклатура.Код,
	             |	ВложенныйЗапрос.Номенклатура.ЕдиницаХраненияОстатков.Представление,
	             |	ВложенныйЗапрос.НомерСтроки
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	НомерСтроки";
				 
	РезультатЗапросаТара = Запрос.Выполнить();
	
	Если РезультатЗапросаТара.Пустой() И РезультатЗапросаТовар.Пустой() Тогда
		Предупреждение(ТекстНетДвижений);
		ТабДокумент = Неопределено;
	Иначе
		ТабДокумент = Новый ТабличныйДокумент;
		ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РасходСРозничныхСкладовВЦенахАТТ";
		ТабДокумент.АвтоМасштаб = Истина;
		ТабДОкумент.РазмерКолонтитулаСверху = 0;
		ТабДокумент.РазмерКолонтитулаСнизу = 0;
		ТабДокумент.ПолеСверху = 10;
		ТабДокумент.ПолеСлева = 10;
		ТабДокумент.ПолеСнизу = 10;
		ТабДокумент.ПолеСправа =10;
		ТабДокумент.ЭкземпляровНаСтранице = 1;
		
		Макет = ПолучитьМакет("ПриходРасходВЦенахАТТ");
		
		ОбластьЗаголовок     = Макет.ПолучитьОбласть("Заголовок");
		ОбластьШапкаТаблицы  = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьШапкаТаблицыТ = Макет.ПолучитьОбласть("ШапкаТаблицыТара");
		ОбластьСклад         = Макет.ПолучитьОбласть("Склад");
		ОбластьСтроки        = Макет.ПолучитьОбласть("Строка");
		ОбластьИтого         = Макет.ПолучитьОбласть("Итого");
		ОбластьСуммаПрописью = Макет.ПолучитьОбласть("СуммаПрописью");
		ОбластьПодписи       = Макет.ПолучитьОбласть("Подписи");
		ОбластьАкт           = Макет.ПолучитьОбласть("АктРазногласий");
		ОбластьОрдер		 = Макет.ПолучитьОбласть("ИнформацияООрдере");
		
		ЗаголовокДокумента="Накладная на перемещение №"+Док.Номер+" от "+Формат(Док.Дата,"ДФ='дд ММММ гггг'") + " г.";
		
		Если ЗначениеЗаполнено(СсылкаНаОбъект.ДатаОтгрузки) Тогда
			ЗаголовокДокумента=ЗаголовокДокумента+Символы.ПС+"Дата отгрузки "+Формат(СсылкаНаОбъект.ДатаОтгрузки,"ДФ='дд ММММ гггг'") + " г.";
		КонецЕсли;
		
		ВыбМОЛ = РегистрыСведений.ОтветственныеЛица.ПолучитьПоследнее(Док.Дата, Новый Структура("СтруктурнаяЕдиница", Док.СкладПолучатель)).ФизическоеЛицо;
		
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ЗаголовокДокумента;
		ТабДокумент.Вывести(ОбластьЗаголовок);
		
		//Вывод расходного ордера
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	СвязанныеДокументы.Ссылка
		               |ИЗ
		               |	КритерийОтбора.СвязанныеДокументы(&Ссылка) КАК СвязанныеДокументы
		               |ГДЕ
		               |	СвязанныеДокументы.Ссылка ССЫЛКА Документ.РасходныйОрдерНаТовары";
		
		Запрос.УстановитьПараметр("Ссылка", Док);
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Тогда
			Сообщить("По данному документу не введен Расходный ордер на товары!");
		Иначе
			Выборка=Результат.Выбрать();
			Выборка.Следующий();
			ОбластьОрдер.Параметры.ИнфоООрдерах=ОбщегоНазначения.СформироватьЗаголовокДокумента(Выборка.Ссылка);
			ТабДокумент.Вывести(ОбластьОрдер);
		КонецЕсли;
		
		//Вывод приходного ордера
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	СвязанныеДокументы.Ссылка
		               |ИЗ
		               |	КритерийОтбора.СвязанныеДокументы(&Ссылка) КАК СвязанныеДокументы
		               |ГДЕ
		               |	СвязанныеДокументы.Ссылка ССЫЛКА Документ.ПриходныйОрдерНаТовары";
		
		Запрос.УстановитьПараметр("Ссылка", Док);
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Тогда
			Сообщить("По данному документу не введен Приходный ордер на товары!");
		Иначе
			Выборка=Результат.Выбрать();
			Выборка.Следующий();
			ОбластьОрдер.Параметры.ИнфоООрдерах=ОбщегоНазначения.СформироватьЗаголовокДокумента(Выборка.Ссылка);
			ТабДокумент.Вывести(ОбластьОрдер);
		КонецЕсли;
		ОбластьСклад.Параметры.ПредставлениеСклада = СокрЛП(Док.СкладПолучатель) + ?(ЗначениеЗаполнено(ВыбМОЛ), " (материально-ответственное лицо: " + ВыбМОЛ + ")", "");
		ТабДокумент.Вывести(ОбластьСклад);
		
		НомерСтроки = 0;
		Сумма = 0;
		Если НЕ РезультатЗапросаТара.Пустой() Тогда
			ТабДокумент.Вывести(ОбластьШапкаТаблицыТ);
			Выборка = РезультатЗапросаТара.Выбрать();
			Пока Выборка.Следующий() Цикл
				НомерСтроки = НомерСтроки + 1;
				
				Сумма = Сумма + ?(Выборка.СуммаПродажная=0,Выборка.ЦенаАтт*Выборка.Количество,Выборка.СуммаПродажная);
				
				
				ЗапросШКТов = Новый Запрос ("ВЫБРАТЬ
				|	РегШК.Владелец,
				|	РегШК.Штрихкод
				|ИЗ
				|	РегистрСведений.Штрихкоды КАК РегШК
				|ГДЕ
				|	РегШК.Владелец = &ВладелецР");
				ЗапросШКТов.УстановитьПараметр("ВладелецР", Выборка.НоменклатураСсылка);
				ВыборкаШКТ = ЗапросШКТов.Выполнить().Выбрать();
				Пока ВыборкаШКТ.Следующий() Цикл
					ШКТовараТ = ВыборкаШКТ.ШтрихКод; 
				КонецЦикла;
				
				
				ОбластьСтроки.Параметры.Заполнить(Выборка);
				ОбластьСтроки.Параметры.НомерСтроки = НомерСтроки;
				ОбластьСтроки.Параметры.Шк = ШКТовараТ;
				ОбластьСтроки.Параметры.Товар = СокрЛП(Выборка.Номенклатура)
				+ ФормированиеПечатныхФорм.ПредставлениеСерий(Выборка);
				Если Выборка.СуммаПродажная=0 Тогда
					ОбластьСтроки.Параметры.Цена=Выборка.ЦенаАТТ;
					ОбластьСтроки.Параметры.СуммаПродажная=Выборка.ЦенаАТТ*Выборка.Количество;
				Иначе
					ОбластьСтроки.Параметры.Цена = ?(Выборка.Количество = 0, 0, Выборка.СуммаПродажная / Выборка.Количество);
				КонецЕсли;
				
				ТабДокумент.Вывести(ОбластьСтроки);
			КонецЦикла;
			ОбластьИтого.Параметры.Всего = ОбщегоНазначения.ФорматСумм(Сумма);
			ТабДокумент.Вывести(ОбластьИтого);
		КонецЕсли;
		
		НомерСтроки = 0;
		Сумма = 0;
		Если НЕ РезультатЗапросаТовар.Пустой() Тогда
			ТабДокумент.Вывести(ОбластьШапкаТаблицы);
			Выборка = РезультатЗапросаТовар.Выбрать();
			Пока Выборка.Следующий() Цикл
				НомерСтроки = НомерСтроки + 1;
				
				Сумма = Сумма + ?(Выборка.СуммаПродажная=0,Выборка.ЦенаАтт*Выборка.Количество,Выборка.СуммаПродажная);
				
				
				ЗапросШКТов = Новый Запрос ("ВЫБРАТЬ
				|	РегШК.Владелец,
				|	РегШК.Штрихкод
				|ИЗ
				|	РегистрСведений.Штрихкоды КАК РегШК
				|ГДЕ
				|	РегШК.Владелец = &ВладелецР");
				ЗапросШКТов.УстановитьПараметр("ВладелецР", Выборка.НоменклатураСсылка);
				ВыборкаШКТ = ЗапросШКТов.Выполнить().Выбрать();
				Пока ВыборкаШКТ.Следующий() Цикл
					ШКТовараТ = ВыборкаШКТ.ШтрихКод; 
				КонецЦикла;
				
				
				ОбластьСтроки.Параметры.Заполнить(Выборка);
				ОбластьСтроки.Параметры.НомерСтроки = НомерСтроки;
				ОбластьСтроки.Параметры.Шк = ШКТовараТ;
				ОбластьСтроки.Параметры.Товар = СокрЛП(Выборка.Номенклатура)
				+ ФормированиеПечатныхФорм.ПредставлениеСерий(Выборка);
				Если Выборка.СуммаПродажная=0 Тогда
					ОбластьСтроки.Параметры.Цена=Выборка.ЦенаАТТ;
					ОбластьСтроки.Параметры.СуммаПродажная=Выборка.ЦенаАТТ*Выборка.Количество;
				Иначе
					ОбластьСтроки.Параметры.Цена = ?(Выборка.Количество = 0, 0, Выборка.СуммаПродажная / Выборка.Количество);
				КонецЕсли;
				
				ТабДокумент.Вывести(ОбластьСтроки);
			КонецЦикла;
			ОбластьИтого.Параметры.Всего = ОбщегоНазначения.ФорматСумм(Сумма);
			ТабДокумент.Вывести(ОбластьИтого);
		КонецЕсли;
		
		ОбластьСуммаПрописью.Параметры.ИтоговаяСтрока = ТекстВсегоПринятоОтпущено + НомерСтроки + " наименований, на сумму " + ОбщегоНазначения.ФорматСумм(Сумма, ВалютаРегламентированногоУчета);
		ОбластьСуммаПрописью.Параметры.СуммаПрописью  = ОбщегоНазначения.СформироватьСуммуПрописью(Сумма, ВалютаРегламентированногоУчета);
		ТабДокумент.Вывести(ОбластьСуммаПрописью);
		
		//20120524 Лямкина Юлия
		ОбластьПодписи.Параметры.КоличествоМест = Док.КоличествоМест;
		ОбластьПодписи.Параметры.Комплектовщик = Док.Комплектовщик;
		ОбластьПодписи.Параметры.ВремяСборки=СсылкаНаОбъект.ВремяСборки;
		//20120524 Лямкина Юлия
		ТабДокумент.Вывести(ОбластьПодписи);
		
		
		КоличествоСтрок = СсылкаНаОбъект.ВозвратнаяТара.Количество()+ СсылкаНаОбъект.Товары.Количество();
		Если КоличествоСтрок>20 Тогда
			ВысотаСтрок = ОбластьСтроки.ВысотаТаблицы;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		
		//dime
		ЗаголовокНомер     = СформироватьНомерДок(Док, Док.Метаданные().Синоним);
		ОбластьАкт.Параметры.Номер = ЗаголовокНомер;
		ТабДокумент.Вывести(ОбластьАкт);
			
	КонецЕсли;
	
	
	
	Возврат ТабДокумент;


КонецФункции // НапечататьПриходРасходСРозничныхСкладовВЦенахАТТ()

Функция Печать(ИмяМакета = "", ПараметрыПечати = Неопределено)	Экспорт

	Если Не ЗначениеЗаполнено(СсылкаНаОбъект) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	//Если Не УправлениеПользователями.РазрешитьПечатьНепроведенныхДокументов(СсылкаНаОбъект.Проведен) Тогда
	//	Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
	//	Возврат Ложь;
	//КонецЕсли;
	ИмяМакета = "ПриходРасходВЦенахАТТ";
	ТабДокумент     = НапечататьПриходРасходСРозничныхСкладовВЦенахАТТ(СсылкаНаОбъект, мВалютаРегламентированногоУчета, Истина);
	
	//Определим параметры печати
	Если ПараметрыПечати <> Неопределено Тогда
		КоличествоЭкземпляров = 1;
		Если НЕ(ПараметрыПечати.Свойство("КоличествоЭкземпляров",КоличествоЭкземпляров)) Тогда
			КоличествоЭкземпляров = 1;			
		КонецЕсли;
		НаПринтер = Ложь;
		Если НЕ(ПараметрыПечати.Свойство("НаПринтер",НаПринтер)) Тогда
			НаПринтер = Ложь;			
		КонецЕсли;
	КонецЕсли;
	Если КоличествоЭкземпляров = Неопределено Тогда
		КоличествоЭкземпляров = 1;
	КонецЕсли;
	Если НаПринтер = Неопределено Тогда
		НаПринтер = Ложь;
	КонецЕсли;
//---КТ-2000-(095)789-3070---Олег-27.06.05
	//НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, СформироватьЗаголовокДокумента(ВыбОбъект));
	Возврат ТабДокумент;
//---КТ-2000-(095)789-3070---Олег-27.06.05

КонецФункции // Печать()


Функция СформироватьНомерДок(ДокументОбъект, НазваниеДокумента = "") Экспорт
	
	Если ДокументОбъект = Неопределено Тогда
		Возврат "";
	Иначе
		//Андрей. Вывод лидирующего нолика
		НомерПечать=ОбщегоНазначения.ПолучитьНомерНаПечать(ДокументОбъект);
		Если ТипЗнч(ДокументОбъект)=Тип("Структура") И День(ДокументОбъект.Дата)<10 Тогда
			НомерПечать="0"+НомерПечать;
		КонецЕсли;
		Возврат " № " + НомерПечать //ПолучитьНомерНаПечать(ДокументОбъект)
		                          + " от " + Формат(ДокументОбъект.Дата, "ДФ='дд ММММ гггг'") + " г.";
	КонецЕсли;

КонецФункции // СформироватьЗаголовокДокумента()


// Возвращает информацию о внешней форме
// КТ-2000: (095)789-3070
// Возвращаемое значение:
//   Структура   – информация о форме
//
Функция ИнформацияОВнешнейФорме()	Экспорт

	ИнформацияОФорме = Новый Структура;
	
	ИнформацияОФорме.Вставить("ВидФормы", ВидФормы);
	ИнформацияОФорме.Вставить("НаименованиеФормы", НаименованиеФормы);
	ИнформацияОФорме.Вставить("РелизФормы", РелизФормы);
	ИнформацияОФорме.Вставить("ДатаИзмененияФормы", ДатаИзмененияФормы);
	ИнформацияОФорме.Вставить("КомментарийФормы", КомментарийФормы);
	
	Возврат ИнформацияОФорме;

КонецФункции // ИнформацияОВнешнейФорме()

//Информация о форме
ВидФормы 			= Перечисления.ВидыДополнительныхВнешнихОбработок.ПечатнаяФорма;
НаименованиеФормы	= "ПриходРасходВЦенахАТТ_Испр";
РелизФормы			= "1.1";
ДатаИзмененияФормы	= '20080529';
КомментарийФормы	= "ПриходРасходВЦенахАТТ";
НазваниеКнопки		= "ПриходРасходВЦенахАТТ";
НазваниеМеню		= "ПриходРасходВЦенахАТТ";
//Попытка
	//КартинкаКнопки 		= Метаданные.ОбщиеКартинки.СправкиАиБ;
//Исключение
	КартинкаКнопки		= Неопределено;
//КонецПопытки;

мВалютаРегламентированногоУчета   = глЗначениеПеременной("ВалютаРегламентированногоУчета");
