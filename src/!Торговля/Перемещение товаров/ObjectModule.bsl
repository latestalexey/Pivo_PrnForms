Перем мВалютаРегламентированногоУчета Экспорт;
Перем ВидФормы Экспорт;
Перем НаименованиеФормы	Экспорт;
Перем РелизФормы	Экспорт;
Перем ДатаИзмененияФормы Экспорт;
Перем КомментарийФормы Экспорт;
Перем НазваниеКнопки Экспорт;
Перем НазваниеМеню Экспорт;
Перем КартинкаКнопки Экспорт;
Перем Условие Экспорт;
Перем УсловиеТары Экспорт;


Функция ПолучитьДанныеДляПечатиПеремещенияТоваров(ВыбДокумент)
	
	ПараметрыПечати = Новый Структура;
	Условие=Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", ВыбДокумент.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПеремещениеТоваров.Номер,
	|	ПеремещениеТоваров.Дата,
	|	ПеремещениеТоваров.Организация,
	|	ПеремещениеТоваров.СкладОтправитель,
	|	ПеремещениеТоваров.СкладОтправитель.Представление КАК Поставщик,
	|	ПеремещениеТоваров.СкладПолучатель,
	|	ПеремещениеТоваров.СкладПолучатель.Представление КАК Покупатель,
	|	ПеремещениеТоваров.Товары.(
	|		Номенклатура,
	//|		Номенклатура.НаименованиеПолное КАК Товар,
	|		Номенклатура.Наименование КАК Товар,
	|		Номенклатура.Код КАК Код,
	|		Номенклатура.Артикул КАК Артикул,
	|		КоличествоМест,
	|		Количество,
	|		ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
	|		ЕдиницаИзмеренияМест.Представление КАК ЕдиницаИзмеренияМест,
	|		Цена,
	|		ХарактеристикаНоменклатуры КАК Характеристика,
	|		СерияНоменклатуры КАК Серия,
	|		НомерСтроки КАК НомерСтроки
	|	),
	|	ПеремещениеТоваров.ВозвратнаяТара.(
	|		Номенклатура,
	//|		Номенклатура.НаименованиеПолное КАК Товар,
	|		Номенклатура.Наименование КАК Товар,
	|		Номенклатура.Код КАК Код,
	|		Номенклатура.Артикул КАК Артикул,
	|		0 КАК КоличествоМест,
	|		Количество,
	|		0 КАК Цена,
	|		Номенклатура.ЕдиницаХраненияОстатков.Представление КАК ЕдиницаИзмерения,
	|		NULL КАК ЕдиницаИзмеренияМест,
	|		НомерСтроки КАК НомерСтроки
	|	)
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	НомерСтроки";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	ВыборкаСтрокТовары = Шапка.Товары.Выбрать();
	ВыборкаСтрокТара   = Шапка.ВозвратнаяТара.Выбрать();
	
	// Выводим шапку накладной
	//ПараметрыПечати.Вставить("ТекстЗаголовка", ОбщегоНазначения.СформироватьЗаголовокДокумента(Шапка, "Накладная на перемещение"));
	Заголовок="Накладная на перемещение №"+Шапка.Номер+" от "+Формат(Шапка.Дата,"ДФ='дд ММММ гггг'") + " г.";
	Если ЗначениеЗаполнено(СсылкаНаОбъект.ДатаОтгрузки) Тогда
		Заголовок=Заголовок+Символы.ПС+"Дата отгрузки "+Формат(СсылкаНаОбъект.ДатаОтгрузки,"ДФ='дд ММММ гггг'") + " г.";
	КонецЕсли;
	ПараметрыПечати.Вставить("ТекстЗаголовка", Заголовок);
	
	
	
	ПараметрыПечати.Вставить("ПредставлениеПоставщика", Шапка.Поставщик);
	ПараметрыПечати.Вставить("Поставщик", Шапка.СкладОтправитель);
	
	
	ПараметрыПечати.Вставить("ПредставлениеПолучателя", Шапка.Покупатель);
	ПараметрыПечати.Вставить("Получатель", Шапка.СкладПолучатель);
	//20120417 Лямкина Юлия
	ПараметрыПечати.Вставить("Комментарий", ВыбДокумент.Ссылка.Комментарий);
	//20120417 Лямкина Юлия
	
	
	// Вывести табличную часть
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ПараметрыПечати.Вставить("ВыводитьКоды", Истина);
		ПараметрыПечати.Вставить("ИмяКолонкиКодов", "ШК");
		
		
	ИначеЕсли ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
		ПараметрыПечати.Вставить("ВыводитьКоды", Истина);
		ПараметрыПечати.Вставить("ИмяКолонкиКодов", "Код");
	Иначе
		ПараметрыПечати.Вставить("ВыводитьКоды", Ложь);
		
		
	КонецЕсли;
	
	ПараметрыПечати.Вставить("ВыводитьЦены", ВыбДокумент.СкладОтправитель.ВидСклада = Перечисления.ВидыСкладов.НТТ ИЛИ ВыбДокумент.СкладПолучатель.ВидСклада = Перечисления.ВидыСкладов.НТТ);
	ПараметрыПечати.Вставить("ФлагПечатиМест", (ВыбДокумент.Товары.Итог("КоличествоМест") > 0));
	
	Позиции = Новый Массив;
	ТараПозиции = Новый Массив;
	
	Ном = 0;
	
	// Выборка товаров
	Пока ВыборкаСтрокТовары.Следующий() Цикл
		
		ПараметрыПозиции = Новый Структура;
		ПараметрыПозиции.Вставить("Номенклатура", ВыборкаСтрокТовары.Номенклатура);		
		
		Ном = Ном + 1;
		
		ПараметрыПозиции.Вставить("НомерСтроки", Ном);
		
		ЗапросШКТов = Новый Запрос ("
		|ВЫБРАТЬ
		|	РегШК.Владелец,
		|	РегШК.ШтрихКод
		|ИЗ
		|	РегистрСведений.ШтрихКоды КАК РегШК
		|ГДЕ
		|	РегШк.Владелец=&ВладелецР");
		ЗапросШКТов.УстановитьПараметр("ВладелецР", ВыборкаСтрокТовары.Номенклатура);
		Выборка = ЗапросШКТов.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ШКТовараТ = Выборка.ШтрихКод; 
		КонецЦикла;
		
		//Если ПараметрыПечати.ВыводитьКоды Тогда
		//	Если ПараметрыПечати.ИмяКолонкиКодов = "Артикул" Тогда
		ПараметрыПозиции.Вставить("Артикул", ШКТовараТ);
		//	Иначе
		//		ПараметрыПозиции.Вставить("Артикул", ВыборкаСтрокТовары.Код);
		//	КонецЕсли;
		//КонецЕсли;
		Отбор = Новый Структура;
		Отбор.Вставить("Владелец", ВыборкаСтрокТовары.Номенклатура);
		Дата=ТекущаяДата();
		ПараметрыПозиции.Вставить("Товар", ВыборкаСтрокТовары.Товар + ФормированиеПечатныхФорм.ПредставлениеСерий(ВыборкаСтрокТовары));
		
		Если ПараметрыПечати.ФлагПечатиМест Тогда
			ПараметрыПозиции.Вставить("КоличествоМест", ВыборкаСтрокТовары.КоличествоМест);
			ПараметрыПозиции.Вставить("ЕдиницаИзмеренияМест", ВыборкаСтрокТовары.ЕдиницаИзмеренияМест);
		КонецЕсли;
		
		ПараметрыПозиции.Вставить("Количество", ВыборкаСтрокТовары.Количество);
		ПараметрыПозиции.Вставить("ЕдиницаИзмерения", ВыборкаСтрокТовары.ЕдиницаИзмерения);
		ПараметрыПозиции.Вставить("Цена", ВыборкаСтрокТовары.Цена);
		
		#Если ВнешнееСоединение Тогда
			WEBПриложения.ПодготовитьСтруктуруДляВнешнегоСоединения(ПараметрыПозиции);
		#КонецЕсли
		//
		Если ЗначениеЗаполнено(ВыборкаСтрокТовары.Количество)=Ложь Тогда
			Условие=Истина
		Иначе Условие=Ложь
		КонецЕсли;
		Позиции.Добавить(ПараметрыПозиции);
		
	КонецЦикла;
	
	ПараметрыПечати.Вставить("Позиции", Позиции);
	
	ПозицииТара=Новый Массив;
	// Выборка возвратная тара
	Пока ВыборкаСтрокТара.Следующий() Цикл
		
		ПараметрыПозиции = Новый Структура;
		ПараметрыПозиции.Вставить("Номенклатура", ВыборкаСтрокТара.Номенклатура);		
		
		Ном = Ном + 1;
		
		ПараметрыПозиции.Вставить("НомерСтроки", Ном);
		
		ЗапросШК = Новый Запрос ("
		|ВЫБРАТЬ
		|	РегШК.Владелец,
		|	РегШК.ШтрихКод
		|ИЗ
		|	РегистрСведений.ШтрихКоды КАК РегШК
		|ГДЕ
		|	РегШк.Владелец=&ВладелецР");
		ЗапросШК.УстановитьПараметр("ВладелецР", ВыборкаСтрокТара.Номенклатура);
		Выборка = ЗапросШК.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ШКТовара = Выборка.ШтрихКод; 
		КонецЦикла;
		
		
		
		//Если ПараметрыПечати.ВыводитьКоды Тогда
		//	Если ПараметрыПечати.ИмяКолонкиКодов = "Артикул" Тогда
		ПараметрыПозиции.Вставить("Артикул", ШкТовара);
		//ПараметрыПозиции.Вставить("Артикул", ВыборкаСтрокТара.Артикул);
		//	Иначе
		//		ПараметрыПозиции.Вставить("Артикул", ВыборкаСтрокТара.Код);
		//	КонецЕсли;
		//КонецЕсли;
		
		ПараметрыПозиции.Вставить("Товар", ВыборкаСтрокТара.Товар);
		
		Если ПараметрыПечати.ФлагПечатиМест Тогда
			ПараметрыПозиции.Вставить("КоличествоМест", ВыборкаСтрокТара.КоличествоМест);
			ПараметрыПозиции.Вставить("ЕдиницаИзмеренияМест", ВыборкаСтрокТара.ЕдиницаИзмеренияМест);
		КонецЕсли;
		
		ПараметрыПозиции.Вставить("Количество", ВыборкаСтрокТара.Количество);
		ПараметрыПозиции.Вставить("ЕдиницаИзмерения", ВыборкаСтрокТара.ЕдиницаИзмерения);
		ПараметрыПозиции.Вставить("Цена", ВыборкаСтрокТара.Цена);
		
		#Если ВнешнееСоединение Тогда
			WEBПриложения.ПодготовитьСтруктуруДляВнешнегоСоединения(ПараметрыПозиции);
		#КонецЕсли
		
		
		ТараПозиции.Добавить(ПараметрыПозиции);
		Если ЗначениеЗаполнено(ВыборкаСтрокТара.Количество)=Ложь Тогда
			УсловиеТары=Истина
		Иначе УсловиеТары=Ложь
		КонецЕсли;
		//Мажарцев	
		//Позиции.Добавить(ПараметрыПозиции);
		
		
	КонецЦикла;
	
	ПараметрыПечати.Вставить("ТараПозиции", ТараПозиции);
	//20120523 Лямкина Юлия
	ПараметрыПечати.Вставить("КоличествоМест", ВыбДокумент.КоличествоМест);
	//20120523 Лямкина Юлия
	
	#Если ВнешнееСоединение Тогда
		WEBПриложения.ПодготовитьСтруктуруДляВнешнегоСоединения(ПараметрыПечати);
	#КонецЕсли
	
	Возврат ПараметрыПечати;
	
КонецФункции //ПолучитьДанныеДляПечатиПеремещенияТоваров()




// Функция формирует табличный документ с печатной формой заказа или счета,
// разработанного методистами (с учетом внесенных корректировок)
//
// Возвращаемое значение:
//  Табличный документ - сформированная печатная форма
//
Функция ПечатьПеремещениеТоваров(ВыбДокумент,Тип)
	
	ПараметрыПечати = ПолучитьДанныеДляПечатиПеремещенияТоваров(ВыбДокумент);	
	
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_Накладная";
	Макет       = ПолучитьМакет("Накладная");
	
	// Выводим шапку накладной
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Вывести табличную часть
	Если Условие=Ложь Тогда
		
		Если ПараметрыПечати.ВыводитьЦены Тогда
			ИмяШапки  = "ШапкаТаблицыСЦенами";
			ИмяСтроки = "СтрокаСЦенами";
		Иначе
			ИмяШапки  = "ШапкаТаблицы";
			ИмяСтроки = "Строка";
		КонецЕсли;
		
		ОбластьНомера  = Макет.ПолучитьОбласть(ИмяШапки + "|НомерСтроки");
		ОбластьКодов   = Макет.ПолучитьОбласть(ИмяШапки + "|КолонкаКодов");
		ОбластьТовар   = Макет.ПолучитьОбласть(ИмяШапки + "|Товар");
		ОбластьМест    = Макет.ПолучитьОбласть(ИмяШапки + "|Мест");
		ОбластьДанных  = Макет.ПолучитьОбласть(ИмяШапки + "|Данные");
		
		ТабДокумент.Вывести(ОбластьНомера);
		Если ПараметрыПечати.ВыводитьКоды Тогда
			ОбластьКодов.Параметры.ИмяКолонкиКодов = ПараметрыПечати.ИмяКолонкиКодов;
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьТовар);
		ОбластьКолонкаТовар = Макет.Область("Товар");
		Если ПараметрыПечати.ВыводитьКоды Тогда
			ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки
			+ ?(ПараметрыПечати.ФлагПечатиМест, 0, Макет.Область("R14C5").ШиринаКолонки + Макет.Область("R14C6").ШиринаКолонки);
		Иначе
			ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки
			+ Макет.Область("КолонкаКодов").ШиринаКолонки
			+ ?(ПараметрыПечати.ФлагПечатиМест, 0, Макет.Область("R14C5").ШиринаКолонки + Макет.Область("R14C6").ШиринаКолонки);
		КонецЕсли;
		Если ПараметрыПечати.ФлагПечатиМест Тогда
			ТабДокумент.Присоединить(ОбластьМест);
		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьДанных);
		
		ОбластьНомера = Макет.ПолучитьОбласть(ИмяСтроки + "|НомерСтроки");
		ОбластьКодов  = Макет.ПолучитьОбласть(ИмяСтроки + "|КолонкаКодов");
		ОбластьТовар  = Макет.ПолучитьОбласть(ИмяСтроки + "|Товар");
		ОбластьМест   = Макет.ПолучитьОбласть(ИмяСтроки + "|Мест");
		ОбластьДанных = Макет.ПолучитьОбласть(ИмяСтроки + "|Данные");
		
		// Выборка товаров
		Для каждого ПараметрыПозиции Из ПараметрыПечати.Позиции Цикл
			
			Если НЕ ЗначениеЗаполнено(ПараметрыПозиции.Номенклатура) Тогда
				Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
				Продолжить;
			КонецЕсли;
			
			ОбластьНомера.Параметры.Заполнить(ПараметрыПозиции);
			ТабДокумент.Вывести(ОбластьНомера);
			
			Если ПараметрыПечати.ВыводитьКоды Тогда
				ОбластьКодов.Параметры.Заполнить(ПараметрыПозиции);
				ТабДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			
			ОбластьТовар.Параметры.Заполнить(ПараметрыПозиции);
			ТабДокумент.Присоединить(ОбластьТовар);
			
			Если ПараметрыПечати.ФлагПечатиМест Тогда
				ОбластьМест.Параметры.Заполнить(ПараметрыПозиции);
				ТабДокумент.Присоединить(ОбластьМест);
			КонецЕсли;
			
			ОбластьДанных.Параметры.Заполнить(ПараметрыПозиции);
			ТабДокумент.Присоединить(ОбластьДанных);
			
		КонецЦикла;
		
		
		// Вывести подвал
		ОбластьНомера = Макет.ПолучитьОбласть("Подвал|НомерСтроки");
		ОбластьКодов  = Макет.ПолучитьОбласть("Подвал|КолонкаКодов");
		ОбластьТовар  = Макет.ПолучитьОбласть("Подвал|Товар");
		ОбластьМест   = Макет.ПолучитьОбласть("Подвал|Мест");
		ОбластьДанных = Макет.ПолучитьОбласть("Подвал|Данные");
		
		ТабДокумент.Вывести(ОбластьНомера);
		Если ПараметрыПечати.ВыводитьКоды Тогда
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьТовар);
		Если ПараметрыПечати.ФлагПечатиМест Тогда
			ТабДокумент.Присоединить(ОбластьМест);
		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьДанных);
	КонецЕсли;
	
	
	
	
	Если УсловиеТары=Ложь Тогда
		
		//Таблица тара
		ИмяШапки  = "ШапкаТаблицыТара";
		ИмяСтроки = "СтрокаТара";
		
		ОбластьНомера  = Макет.ПолучитьОбласть(ИмяШапки + "|НомерСтроки");
		ОбластьКодов   = Макет.ПолучитьОбласть(ИмяШапки + "|КолонкаКодов");
		ОбластьТовар   = Макет.ПолучитьОбласть(ИмяШапки + "|Товар");
		ОбластьМест    = Макет.ПолучитьОбласть(ИмяШапки + "|Мест");
		ОбластьДанных  = Макет.ПолучитьОбласть(ИмяШапки + "|Данные");
		
		ТабДокумент.Вывести(ОбластьНомера);
		Если ПараметрыПечати.ВыводитьКоды Тогда
			ОбластьКодов.Параметры.ИмяКолонкиКодов = ПараметрыПечати.ИмяКолонкиКодов;
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьТовар);
		ОбластьКолонкаТовар = Макет.Область("Товар");
		Если ПараметрыПечати.ВыводитьКоды Тогда
			ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки
			+ ?(ПараметрыПечати.ФлагПечатиМест, 0, Макет.Область("R14C5").ШиринаКолонки + Макет.Область("R14C6").ШиринаКолонки);
		Иначе
			ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки
			+ Макет.Область("КолонкаКодов").ШиринаКолонки
			+ ?(ПараметрыПечати.ФлагПечатиМест, 0, Макет.Область("R14C5").ШиринаКолонки + Макет.Область("R14C6").ШиринаКолонки);
		КонецЕсли;
		Если ПараметрыПечати.ФлагПечатиМест Тогда
			ТабДокумент.Присоединить(ОбластьМест);
		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьДанных);
		
		ОбластьНомера = Макет.ПолучитьОбласть(ИмяСтроки + "|НомерСтроки");
		ОбластьКодов  = Макет.ПолучитьОбласть(ИмяСтроки + "|КолонкаКодов");
		ОбластьТовар  = Макет.ПолучитьОбласть(ИмяСтроки + "|Товар");
		ОбластьМест   = Макет.ПолучитьОбласть(ИмяСтроки + "|Мест");
		ОбластьДанных = Макет.ПолучитьОбласть(ИмяСтроки + "|Данные");
		
		// Выборка товаров
		
		
		Для каждого ПараметрыПозиции Из ПараметрыПечати.ТараПозиции Цикл
			
			
			//	Если НЕ ЗначениеЗаполнено(ПараметрыПозиции.Номенклатура) Тогда
			//		Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			//		Продолжить;
			//	КонецЕсли;
			
			ОбластьНомера.Параметры.Заполнить(ПараметрыПозиции);
			ТабДокумент.Вывести(ОбластьНомера);
			
			Если ПараметрыПечати.ВыводитьКоды Тогда
				ОбластьКодов.Параметры.Заполнить(ПараметрыПозиции);
				ТабДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			
			ОбластьТовар.Параметры.Заполнить(ПараметрыПозиции);
			ТабДокумент.Присоединить(ОбластьТовар);
			
			Если ПараметрыПечати.ФлагПечатиМест Тогда
				ОбластьМест.Параметры.Заполнить(ПараметрыПозиции);
				ТабДокумент.Присоединить(ОбластьМест);
			КонецЕсли;
			
			ОбластьДанных.Параметры.Заполнить(ПараметрыПозиции);
			ТабДокумент.Присоединить(ОбластьДанных);
			
		КонецЦикла;
		
		
		
		// Вывести подвал
		ОбластьНомера = Макет.ПолучитьОбласть("Подвал|НомерСтроки");
		ОбластьКодов  = Макет.ПолучитьОбласть("Подвал|КолонкаКодов");
		ОбластьТовар  = Макет.ПолучитьОбласть("Подвал|Товар");
		ОбластьМест   = Макет.ПолучитьОбласть("Подвал|Мест");
		ОбластьДанных = Макет.ПолучитьОбласть("Подвал|Данные");
		
		ТабДокумент.Вывести(ОбластьНомера);
		Если ПараметрыПечати.ВыводитьКоды Тогда
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьТовар);
		Если ПараметрыПечати.ФлагПечатиМест Тогда
			ТабДокумент.Присоединить(ОбластьМест);
		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьДанных);
		
	КонецЕсли;
	
	// Вывести подписи
	ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ОбластьМакета.Параметры.ВремяСборки=СсылкаНаОбъект.ВремяСборки;
	ОбластьМакета.Параметры.Контролер=СсылкаНаОбъект.Контролер;
	ОбластьМакета.Параметры.Комплектовщик=СсылкаНаОбъект.Комплектовщик;
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("АктРазногласий");
	ОбластьМакета.Параметры.Номер= СформироватьНомерДок(СсылкаНаОбъект, СсылкаНаОбъект.Метаданные().Синоним);;
	ТабДокумент.Вывести(ОбластьМакета);
	
	Возврат ТабДокумент;
	/////////////////////////////////////////////////////////
	
	
	
	
	
	
	
	
	
КонецФункции // ПечатьПеремещениеТоваров()

// СЕРВИСНЫЕ ФУНКЦИИ ПРИ ФОРМИРОВАНИИ ПЕЧАТНЫХ ФОРМ

// Процедура считывает ФИО физлица
//
// Параметры: 
//  Нет.
//
// Возвращаемое значение:
//  Нет.
//
Функция ФИО(Ссылка)
	
	ФИОСрез = РегистрыСведений.ФИОФизЛиц.ПолучитьПоследнее(,Новый Структура("ФизЛицо",Ссылка));
	
	Фамилия  = ФИОСрез.Фамилия;
	Имя      = ФИОСрез.Имя;
	Отчество = ФИОСрез.Отчество;
	Возврат Фамилия+" "+Сред(Имя,1,1)+"."+Сред(Отчество,1,1)+".";
	
КонецФункции 


//КТ-2000-(095)789-3070/////////////////////////////////////////////////////////
// Функции и процедуры для использования внешними данными

// Внешняя функция печати
// КТ-2000: (095)789-3070
// Параметры
//  ИмяМакета  – Строка – имя формы печати
//
// Возвращаемое значение:
//   Булево   –Печать прошла успешно - Истина, иначе - Ложь
//
Функция Печать(ИмяМакета = "", ПараметрыПечати = Неопределено)	Экспорт
	
	Если Не ЗначениеЗаполнено(СсылкаНаОбъект) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	//Если Не УправлениеПользователями.РазрешитьПечатьНепроведенныхДокументов(СсылкаНаОбъект.Проведен) Тогда
	//	Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
	//	Возврат Ложь;
	//КонецЕсли;
	ИмяМакета = "Накладная";
	ТабДокумент     = ПечатьПеремещениеТоваров(СсылкаНаОбъект,ИмяМакета);
	
	//Определим параметры печати
	Если ПараметрыПечати <> Неопределено Тогда
		КоличествоЭкземпляров = 1;
		Если НЕ(ПараметрыПечати.Свойство("КоличествоЭкземпляров",КоличествоЭкземпляров)) Тогда
			КоличествоЭкземпляров = 1;			
		КонецЕсли;
		НаПринтер = Ложь;
		Если НЕ(ПараметрыПечати.Свойство("НаПринтер",НаПринтер)) Тогда
			НаПринтер = Ложь;			
		КонецЕсли;
	КонецЕсли;
	Если КоличествоЭкземпляров = Неопределено Тогда
		КоличествоЭкземпляров = 1;
	КонецЕсли;
	Если НаПринтер = Неопределено Тогда
		НаПринтер = Ложь;
	КонецЕсли;
	//---КТ-2000-(095)789-3070---Олег-27.06.05
	//НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, СформироватьЗаголовокДокумента(ВыбОбъект));
	Возврат ТабДокумент;
	//---КТ-2000-(095)789-3070---Олег-27.06.05
	
КонецФункции // Печать()


// Возвращает информацию о внешней форме
// КТ-2000: (095)789-3070
// Возвращаемое значение:
//   Структура   – информация о форме
//
Функция ИнформацияОВнешнейФорме()	Экспорт
	
	ИнформацияОФорме = Новый Структура;
	
	ИнформацияОФорме.Вставить("ВидФормы", ВидФормы);
	ИнформацияОФорме.Вставить("НаименованиеФормы", НаименованиеФормы);
	ИнформацияОФорме.Вставить("РелизФормы", РелизФормы);
	ИнформацияОФорме.Вставить("ДатаИзмененияФормы", ДатаИзмененияФормы);
	ИнформацияОФорме.Вставить("КомментарийФормы", КомментарийФормы);
	
	Возврат ИнформацияОФорме;
	
КонецФункции // ИнформацияОВнешнейФорме()

Функция СформироватьНомерДок(ДокументОбъект, НазваниеДокумента = "") Экспорт
	
	Если ДокументОбъект = Неопределено Тогда
		Возврат "";
	Иначе
		//Андрей. Вывод лидирующего нолика
		НомерПечать=ОбщегоНазначения.ПолучитьНомерНаПечать(ДокументОбъект);
		Если ТипЗнч(ДокументОбъект)=Тип("Структура") И День(ДокументОбъект.Дата)<10 Тогда
			НомерПечать="0"+НомерПечать;
		КонецЕсли;
		Возврат " № " + НомерПечать //ПолучитьНомерНаПечать(ДокументОбъект)
		                          + " от " + Формат(ДокументОбъект.Дата, "ДФ='дд ММММ гггг'") + " г.";
	КонецЕсли;

КонецФункции // СформироватьЗаголовокДокумента()


//Информация о форме
ВидФормы 			= Перечисления.ВидыДополнительныхВнешнихОбработок.ПечатнаяФорма;
НаименованиеФормы	= "Перемещение_Пивко";
РелизФормы			= "1.1";
ДатаИзмененияФормы	= '20080529';
КомментарийФормы	= "Перемещение";
НазваниеКнопки		= "Перемещение";
НазваниеМеню		= "Перемещение";
//Попытка
//КартинкаКнопки 		= Метаданные.ОбщиеКартинки.СправкиАиБ;
//Исключение
КартинкаКнопки		= Неопределено;
//КонецПопытки;

мВалютаРегламентированногоУчета   = глЗначениеПеременной("ВалютаРегламентированногоУчета");
