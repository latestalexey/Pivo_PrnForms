Перем мВалютаРегламентированногоУчета Экспорт;
Перем ВидФормы Экспорт;
Перем НаименованиеФормы	Экспорт;
Перем РелизФормы	Экспорт;
Перем ДатаИзмененияФормы Экспорт;
Перем КомментарийФормы Экспорт;
Перем НазваниеКнопки Экспорт;
Перем НазваниеМеню Экспорт;
Перем КартинкаКнопки Экспорт;

Функция ПечатьДокументаМЛ(ВыбДокумент)
	ТабДокумент=Новый ТабличныйДокумент;
	
	ТаблицаРеализаций=ВыбДокумент.СписокДокументов;
	
	Если ТаблицаРеализаций.Количество()=0 тогда
		Сообщить("Сначало требуется заполнить таблицу накладных");
		Возврат Неопределено;
	Иначе
		Отказ=Ложь;
		Для Каждого СтрокаТЧ Из ТаблицаРеализаций Цикл
			Если СтрокаТЧ.ТребДовер И НЕ СтрокаТЧ.ЕстьДовер Тогда
				Сообщить("В строке "+(ТаблицаРеализаций.Индекс(СтрокаТЧ)+1)+" не заполнена доверенность",СтатусСообщения.Внимание);
				Отказ=Истина;
			КонецЕсли;
		КонецЦикла;
		Если Отказ И Вопрос("Есть незаполненные доверенности. Продолжить формирование?",РежимДиалогаВопрос.ДаНет,30,КодВозвратаДиалога.Нет)<>КодВозвратаДиалога.Да Тогда
			Возврат Неопределено
		КонецЕсли;
	КонецЕсли;
	
	Макет = ПолучитьМакет("макет");
	
	СуммаИтого=0;
	ТараИтого=0;
	Итого50=0;
	Итого30=0;
	ИтогоБал=0;
	ИтогоПрочее=0;
	СтарыйКонтрагент = Справочники.Контрагенты.ПустаяСсылка();
    ВсегоКег = 0;
	СтароеКолвоКег = 0;
	
	УжеВыведено=Новый ТаблицаЗначений;
	УжеВыведено.Колонки.Добавить("Грузополучатель",Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	УжеВыведено.Колонки.Добавить("Количество",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,3)));
	
	//Все снеки?
	ГруппыСнеки = Новый СписокЗначений;
	ГруппыСнеки.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000000235"));//05 Сигареты
	ГруппыСнеки.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000000643"));//06 Снеки
	ГруппыСнеки.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000000700"));//061 Весовые снеки
	ГруппыСнеки.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000010617"));//Упаковка
	ГруппыСнеки.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000009446"));//Этикетки магазины
	ГруппыСнеки.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000011236"));//Этикетки ОПТ
	ГруппыСнеки.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000007505"));//Этикетки Пивная Коллекция
	//KAV++ Крапивин Андрей. 25.09.2015 10:25:19 
	ГруппыСнеки.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000007335"));//09 Прикассовая
	ГруппыСнеки.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000000944"));//07 Холодильник
	ГруппыСнеки.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000010617"));//упаковка
	ГруппыСнеки.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000003606"));//15 Прочие товары
	ГруппыСнеки.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000006336"));//19 Напитки б/а
	ГруппыСнеки.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000000086"));//02 Напитки б/а
	//KAV-- Крапивин Андрей. 25.09.2015 10:27:16
	
	//Часто используемые запросы
	ЗапросТелефон			= Новый Запрос;
	ЗапросТелефон.Текст		= "ВЫБРАТЬ
	                   		  |	КонтактнаяИнформация.Представление
	                   		  |ИЗ
	                   		  |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	                   		  |ГДЕ
	                   		  |	КонтактнаяИнформация.Объект = &Объект
	                   		  |	И КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)";
						  
	ЗапросСвойства			= Новый Запрос;
	ЗапросСвойства.Текст	= "ВЫБРАТЬ
	                    	  |	ЗначенияСвойствОбъектов.Значение КАК Значение
	                    	  |ИЗ
	                    	  |	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	                    	  |ГДЕ
	                    	  |	ЗначенияСвойствОбъектов.Объект = &Объект
	                    	  |	И ЗначенияСвойствОбъектов.Свойство = &Свойство";
						   
	ЗапросТары				= Новый Запрос;
	ЗапросТары.Текст		= "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                		  |	РеализацияТоваровУслугВозвратнаяТара.Количество КАК Количество,
	                		  |	РеализацияТоваровУслугВозвратнаяТара.Номенклатура.ЕдиницаХраненияОстатков.Объем КАК Объем
	                		  |ИЗ
	                		  |	Документ.РеализацияТоваровУслуг.ВозвратнаяТара КАК РеализацияТоваровУслугВозвратнаяТара
	                		  |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	                		  |		ПО РеализацияТоваровУслугВозвратнаяТара.Ссылка = РеализацияТоваровУслуг.Ссылка
	                		  |ГДЕ
	                		  |	ВЫБОР
	                		  |			КОГДА РеализацияТоваровУслуг.Тара
	                		  |				ТОГДА РеализацияТоваровУслуг.ДокументОснование = &Ссылка
	                		  |			ИНАЧЕ РеализацияТоваровУслуг.Ссылка = &Ссылка
	                		  |		КОНЕЦ
	                		  |ИТОГИ
	                		  |	СУММА(Количество)
	                		  |ПО
	                		  |	Объем";

	////dime
	ЗапросСнеки				= Новый Запрос;
	ЗапросСнеки.УстановитьПараметр("ГруппыСнеки", ГруппыСнеки);
	ЗапросСнеки.Текст		= "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                 		  |	РеализацияТоваровУслугТовары.НомерСтроки,
	                 		  |	РеализацияТоваровУслугТовары.Номенклатура,
	                 		  |	РеализацияТоваровУслугТовары.Количество
	                 		  |ИЗ
	                 		  |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	                 		  |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	                 		  |		ПО РеализацияТоваровУслугТовары.Ссылка = РеализацияТоваровУслуг.Ссылка
	                 		  |ГДЕ
	                 		  |	РеализацияТоваровУслуг.Ссылка = &Док
	                 		  |	И РеализацияТоваровУслугТовары.Номенклатура В ИЕРАРХИИ(&ГруппыСнеки)";
							  
	ЗапросКег				= Новый Запрос;
	ЗапросКег.Текст			= "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               			  |	ТоварыПереданныеОстаткиГрузополучатель.КоличествоОстаток КАК КоличествоОстатокГрузополучатель
	               			  |ИЗ
	               			  |	РегистрНакопления.ТоварыПереданные.Остатки(
	               			  |			&КонПериодаГр,
	               			  |			СтатусПередачи = &СтатусПередачи
	               			  |				И Контрагент = &Контрагент
	               			  |				И Грузополучатель = &Грузополучатель
	               			  |				И (Номенклатура = &КегаПивко
	               			  |					ИЛИ Номенклатура = &КегаШихан
	               			  |					ИЛИ Номенклатура = &КегаТагил)) КАК ТоварыПереданныеОстаткиГрузополучатель";
							  
	ЗапросКег.УстановитьПараметр("СтатусПередачи",Перечисления.СтатусыПолученияПередачиТоваров.ВозвратнаяТара);
	ЗапросКег.УстановитьПараметр("КегаПивко",Справочники.Номенклатура.НайтиПоКоду("00000000141"));
	ЗапросКег.УстановитьПараметр("КегаШихан",Справочники.Номенклатура.НайтиПоКоду("00000000146"));
	ЗапросКег.УстановитьПараметр("КегаТагил",Справочники.Номенклатура.НайтиПоКоду("00000000144"));

								  
    //телефон экспедитора
	ЗапросТелефон.Параметры.Вставить("Объект", ВыбДокумент.Водитель);
	РезультатЗапросаТелефон = ЗапросТелефон.Выполнить().Выбрать();
	ТелефонЭкспедитора = "";
	Пока РезультатЗапросаТелефон.Следующий() Цикл
		ТелефонЭкспедитора  = ТелефонЭкспедитора + РезультатЗапросаТелефон.Представление + "; ";
	КонецЦикла;
	
	//Тара для вывода
	ТаблицаВсяТара = ПолучитьТаблицуТары();
	
	КоличествоДляТаблицыТары1 = ТаблицаВсяТара.Количество();
	КоличествоДляТаблицыТары2 = ПолучитьТаблицуТары(Истина).Количество();
	
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//НАЧИНАЕМ ВЫВОД ПЕЧАТНОЙ ФОРМЫ
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
	ШапкаДок = Макет.ПолучитьОбласть("ШапкаДокумента");
	
	ШапкаДок.Параметры.ЭкспедиторДок	= "" + ВыбДокумент.Водитель + " " + ТелефонЭкспедитора;
	ШапкаДок.Параметры.Дата				= Формат(ВыбДокумент.НачалоПериода,"ДФ=дд.ММ.гггг");
	ШапкаДок.Параметры.Номер			= ВыбДокумент.Номер;
	
	ТабДокумент.Вывести(ШапкаДок);
	
	//20120918 Лямкина Юлия 
    НомерСтрокиКеги1 = 0;
    НомерСтрокиКеги2 = -1;
	ПодписиПерваяТаблица = 1;
	// Кристина 20042013
	Для Каждого РезультатЗапроса из ТаблицаРеализаций Цикл
		//Часто используемые параметры
		Контрагент			=	РезультатЗапроса.Контрагент;
		Грузополучатель		=	?(РезультатЗапроса.Грузополучатель<>Справочники.Контрагенты.ПустаяСсылка(),РезультатЗапроса.Грузополучатель,РезультатЗапроса.Контрагент);
		Накладная			=	РезультатЗапроса.Накладная;
		
		
		//20120918 Лямкина Юлия 
		//выведем в левые таблицы всю тару
		Если НомерСтрокиКеги1 < КоличествоДляТаблицыТары1 Тогда 
			//верхняя таблица
			Строка = Макет.ПолучитьОбласть("Строка|КолонкаКег"); 
			ЗаполнитьЗначенияСвойств(Строка.Параметры,ТаблицаВсяТара[НомерСтрокиКеги1]);
			НомерСтрокиКеги1 = НомерСтрокиКеги1 + 1;
		ИначеЕсли НомерСтрокиКеги1 = КоличествоДляТаблицыТары1 И НомерСтрокиКеги2 = -1 Тогда
			//подписи к первой таблице
			Если ПодписиПерваяТаблица = 1 Тогда 
				Строка = Макет.ПолучитьОбласть("ПодвалОтгружено1|КолонкаКег"); 
				ПодписиПерваяТаблица = ПодписиПерваяТаблица + 1;
			ИначеЕсли ПодписиПерваяТаблица = 2 Тогда	
				Строка = Макет.ПолучитьОбласть("ПодвалОтгружено2|КолонкаКег"); 
				ПодписиПерваяТаблица = ПодписиПерваяТаблица + 1;
			ИначеЕсли ПодписиПерваяТаблица = 3 Тогда	
				Строка = Макет.ПолучитьОбласть("ПодвалДата|КолонкаКег"); 
				ПодписиПерваяТаблица = ПодписиПерваяТаблица + 1;
			ИначеЕсли ПодписиПерваяТаблица = 4 Тогда	
			//шапка ко второй таблице	
				Строка = Макет.ПолучитьОбласть("ШапкаКеги1|КолонкаКег"); 
				ПодписиПерваяТаблица = ПодписиПерваяТаблица + 1;
			ИначеЕсли ПодписиПерваяТаблица = 5 Тогда	
				Строка = Макет.ПолучитьОбласть("ШапкаКеги2|КолонкаКег"); 
				ПодписиПерваяТаблица = ПодписиПерваяТаблица + 1;
			ИначеЕсли ПодписиПерваяТаблица = 6 Тогда	
				Строка = Макет.ПолучитьОбласть("ШапкаКеги3|КолонкаКег"); 
				ПодписиПерваяТаблица = ПодписиПерваяТаблица + 1;
				НомерСтрокиКеги2 = 0;
				
				ТаблицаВсяТара = ПолучитьТаблицуТары(Истина);
				
				ПодписиПерваяТаблица = 1;
			КонецЕсли;	
		ИначеЕсли НомерСтрокиКеги1 = КоличествоДляТаблицыТары1 И НомерСтрокиКеги2 <= КоличествоДляТаблицыТары2 - 1 Тогда
			Строка = Макет.ПолучитьОбласть("Строка|КолонкаКег"); 
			ЗаполнитьЗначенияСвойств(Строка.Параметры,ТаблицаВсяТара[НомерСтрокиКеги2]);
			Строка.Параметры.Количество=0;
			НомерСтрокиКеги2 = НомерСтрокиКеги2 + 1;
		ИначеЕсли НомерСтрокиКеги2 = КоличествоДляТаблицыТары2 И ПодписиПерваяТаблица <= 3 Тогда 
			Если ПодписиПерваяТаблица = 1 Тогда 
				Строка = Макет.ПолучитьОбласть("ПодвалСдано1|КолонкаКег"); 
				ПодписиПерваяТаблица = ПодписиПерваяТаблица + 1;
			ИначеЕсли ПодписиПерваяТаблица = 2 Тогда	
				Строка = Макет.ПолучитьОбласть("ПодвалСдано2|КолонкаКег"); 
				ПодписиПерваяТаблица = ПодписиПерваяТаблица + 1;
			ИначеЕсли ПодписиПерваяТаблица = 3 Тогда	
				Строка = Макет.ПолучитьОбласть("ПодвалДата|КолонкаКег"); 
				ПодписиПерваяТаблица = ПодписиПерваяТаблица + 1;
			КонецЕсли;
		Иначе
			Строка = Макет.ПолучитьОбласть("ПустаяСтрока|КолонкаКег"); 
		КонецЕсли;
		ТабДокумент.Вывести(Строка);
		//20120918 Лямкина Юлия 
		
		//Есть ли лимит кеги Кристина
		ЗапросСвойства.УстановитьПараметр("Объект",Грузополучатель);
		ЗапросСвойства.УстановитьПараметр("Свойство",ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Лимит кеги"));
		РезультатЛимитКеги = ЗапросСвойства.Выполнить().Выбрать();
		Если РезультатЛимитКеги.Количество()>0 тогда
			РезультатЛимитКеги.Следующий();
			ЛимитКегиТекКонтрагент = РезультатЛимитКеги.Значение;
		Иначе
			ЛимитКегиТекКонтрагент = "";
		КонецЕсли;
		
		//Время работы
		ЗапросСвойства.УстановитьПараметр("Объект",Грузополучатель);
		ЗапросСвойства.УстановитьПараметр("Свойство",ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию(" Время работы"));
		РезультатВремяРаботы = ЗапросСвойства.Выполнить().Выбрать();
		Если РезультатВремяРаботы.Количество()>0 тогда
			РезультатВремяРаботы.Следующий();
			ВремяРаботы	= РезультатВремяРаботы.Значение;
		Иначе
			ВремяРаботы	= "";
		КонецЕсли;
		
		//20111219 Лямкина Юлия 
		//если установлены все виды учета, то выделим серым
		Если Накладная.ОтражатьВУправленческомУчете	И Накладная.ОтражатьВБухгалтерскомУчете	И Накладная.ОтражатьВНалоговомУчете Тогда 
			Строка = Макет.ПолучитьОбласть("СтрокаСерая|ОсновнаяЧасть");
		ИначеЕсли Строка(ЛимитКегиТекКонтрагент)<>"" тогда
			Строка = Макет.ПолучитьОбласть("СтрокаЖирная|ОсновнаяЧасть");
		Иначе
			Строка = Макет.ПолучитьОбласть("Строка|ОсновнаяЧасть");
		КонецЕсли;
		
		Строка.Параметры.ВремяРаботы = ВремяРаботы;
		Строка.Параметры.НомерДок = ОбщегоНазначения.ПолучитьНомерНаПечать(Накладная);
		//20111219 Лямкина Юлия 
		Если ЗначениеЗаполнено(Накладная.АдресДоставки)=Ложь Тогда
			Адрес = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Грузополучатель, Накладная.Дата), "ФактическийАдрес");
			Строка.Параметры.АдресДост=Адрес;
		Иначе
			Строка.Параметры.АдресДост=РезультатЗапроса.Накладная.АдресДоставки;
		КонецЕсли;
		
		//Вывод контактной инфорации
		Строка.Параметры.Контрагент=Контрагент;
		Строка.Параметры.СуммаДок=Накладная.СуммаДокумента;
		СуммаИтого=СуммаИтого+Накладная.СуммаДокумента;
		Тел=null;
		
		ЗапросТелефон.Параметры.Вставить("Объект", Контрагент.ОсновнойМенеджерПокупателя);
		ТелМенеджера=ЗапросТелефон.Выполнить().Выбрать();
		Пока ТелМенеджера.Следующий() Цикл
			Тел=ТелМенеджера.Представление;
		КонецЦикла;
		Если ЗначениеЗаполнено(Тел)=Истина Тогда
			Строка.Параметры.МенеджерОсн=Строка(Контрагент.ОсновнойМенеджерПокупателя)+ ", тел: "+Строка(Тел);
		Иначе
			Строка.Параметры.МенеджерОсн=Контрагент.ОсновнойМенеджерПокупателя;
		КонецЕсли;
		
		
		//20120322 Лямкина Юлия
		Строка.Параметры.МенеджерОсн=СтрЗаменить(Накладная.Комментарий, "Создан обработкой заказов покупателей", "");
		Если ЗначениеЗаполнено(Накладная.Сделка) И (Накладная.Комментарий<>Накладная.Сделка.Комментарий) Тогда 
			Строка.Параметры.МенеджерОсн = Строка.Параметры.МенеджерОсн + Символы.ПС + Накладная.Сделка.Комментарий;
		КонецЕсли;
		//20120322 Лямкина Юлия
				
		Колво50 = 0;
		Колво30 = 0;
		КолвоБал = 0;
		КолвоПрочее = 0;
		
		ЗапросТары.Параметры.Вставить("Ссылка", Накладная);
		РезультатЗапросаТары = ЗапросТары.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		Пока РезультатЗапросаТары.Следующий() Цикл
			Если РезультатЗапросаТары.Объем = 50 Тогда 
				Колво50 = Колво50 + РезультатЗапросаТары.Количество;
			ИначеЕсли РезультатЗапросаТары.Объем = 40 Тогда 
				КолвоБал = КолвоБал + РезультатЗапросаТары.Количество;
			Иначе 
				КолвоПрочее = КолвоПрочее + РезультатЗапросаТары.Количество;
			КонецЕсли;
		КонецЦикла;

		Строка.Параметры.Колво50 = Колво50;
		Строка.Параметры.КолвоБал = КолвоБал;
		Строка.Параметры.КолвоПрочее = КолвоПрочее;
		
		//Андрей. Проверка наличия доверенности
		Если РезультатЗапроса.ЕстьДовер Тогда
			Строка.Параметры.Доверенность = "Д";
		Иначе
			Строка.Параметры.Доверенность = "";
		КонецЕсли;
		
	
		////dime
		ЗапросСнеки.УстановитьПараметр("Док", Накладная);
		Если НЕ ЗапросСнеки.Выполнить().Пустой() Тогда
			Строка.Параметры.Снеки = "С";
		Иначе
			Строка.Параметры.Снеки = "";
		КонецЕсли;
		
		//Андрей
		ТараИтого=ТараИтого+Колво30+Колво50+КолвоБал+КолвоПрочее;
		Итого30 = Итого30 + Колво30;
		Итого50 = Итого50 + Колво50;
		ИтогоБал = ИтогоБал + КолвоБал;
		НовыйКонтрагент = Контрагент;
		
		//Расчет возврата кег!!
		Если Колво50<>0 Тогда 
			Если Контрагент.КонтрагентСверен Тогда
				ДокСТарой=Документы.РеализацияТоваровУслуг.НайтиПоРеквизиту("ДокументОснование",Накладная).Ссылка;
				Если ЗначениеЗаполнено(ДокСТарой) Тогда
					ЗапросКег.УстановитьПараметр("КонПериодаГр",Новый Граница(ДокСТарой.МоментВремени(),ВидГраницы.Включая));
				Иначе
					ЗапросКег.УстановитьПараметр("КонПериодаГр",Новый Граница(Накладная.МоментВремени(),ВидГраницы.Включая));
				КонецЕсли;
				ЗапросКег.УстановитьПараметр("Грузополучатель",Грузополучатель);
				ЗапросКег.УстановитьПараметр("Контрагент",Контрагент);
				РезультатКег = ЗапросКег.Выполнить().Выбрать();
				
				ЗапросСвойства.УстановитьПараметр("Свойство",ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Лимит КЕГИ"));
				ЗапросСвойства.УстановитьПараметр("Объект",Грузополучатель);
				РезультатСвойстваКег = ЗапросСвойства.Выполнить().Выбрать();
				Если РезультатСвойстваКег.Следующий() Тогда
					Попытка
						Если РезультатСвойстваКег.Значение<>NULL тогда
							ЛимитКегиГрузополучатель = Число(РезультатСвойстваКег.Значение.Наименование);
						КонецЕсли;
					Исключение
						Сообщить("Не удалось определить лимит кеги для контрагента "+Строка(Контрагент));
						ЛимитКегиГрузополучатель =0;
					КонецПопытки;
				Иначе
					ЛимитКегиГрузополучатель =0;
				КонецЕсли;
				Если РезультатКег.Следующий() Тогда
					КегКВозврату=РезультатКег.КоличествоОстатокГрузополучатель-ЛимитКегиГрузополучатель;
					Если КегКВозврату<0 Тогда
						КегКВозврату=0;
					КонецЕсли;
				Иначе
					КегКВозврату=0;
				КонецЕсли;
			Иначе
				КегКВозврату=РегистрыСведений.РасчетВозвратаКег.ПолучитьПоследнее(ВыбДокумент.НачалоПериода,Новый Структура("Контрагент,Грузополучатель",Контрагент,Грузополучатель)).КолКегКВозврату;
			КонецЕсли;
			//Проверяем что вывели уже
			СтрокаОлд=УжеВыведено.Найти(Грузополучатель);
			Если СтрокаОлд=Неопределено Тогда
				СтрокаОлд=УжеВыведено.Добавить();
				СтрокаОлд.Грузополучатель=Грузополучатель;
				СтрокаОлд.Количество=КегКВозврату;
			Иначе
				КегКВозврату=КегКВозврату-СтрокаОлд.Количество;
				Если КегКВозврату<0 Тогда
					КегКВозврату=0;
				Иначе
					СтрокаОлд.Количество=СтрокаОлд.Количество+КегКВозврату;
				КонецЕсли;
			КонецЕсли;
			Строка.Параметры.ЗабратьКег=макс(КегКВозврату,0);
		КонецЕсли;
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		
		
		СтарыйКонтрагент = РезультатЗапроса.Контрагент;
		//dime
		
		//Кристина конец  20130219
		ИтогоПрочее = ИтогоПрочее + КолвоПрочее;
		//ТабДокумент.Вывести(Строка);
		Если Колво50>0 тогда 
			Строка.Параметры.КолвоПрочее = ЛимитКегиТекКонтрагент;
		КонецЕсли;
		ТабДокумент.Присоединить(Строка);
		//20120406 Лямкина Юлия
		
	КонецЦикла;
	
	//20120918 Лямкина Юлия 
	//посчитаем, все ли вывели в левые таблицы
	ОсталосьИтераций = 1;
	Если НомерСтрокиКеги1 < КоличествоДляТаблицыТары1 Тогда 
		ОсталосьИтераций = (КоличествоДляТаблицыТары1 - НомерСтрокиКеги1) + КоличествоДляТаблицыТары1 + 6 + 3 + 1;
	ИначеЕсли НомерСтрокиКеги2 = -1 Тогда
		ОсталосьИтераций = 6 - ПодписиПерваяТаблица + (КоличествоДляТаблицыТары1 - НомерСтрокиКеги2) + 3 + 1;
	ИначеЕсли НомерСтрокиКеги2 < КоличествоДляТаблицыТары2 Тогда
		ОсталосьИтераций = (КоличествоДляТаблицыТары2 - НомерСтрокиКеги2) + 3 + 1;
	ИначеЕсли ПодписиПерваяТаблица <=3 Тогда 
		ОсталосьИтераций = 3 - ПодписиПерваяТаблица + 1;
	КонецЕсли;
	
	Для сч = 1 по ОсталосьИтераций Цикл
		Если НомерСтрокиКеги1 < КоличествоДляТаблицыТары1 Тогда 
			//верхняя таблица
			Строка = Макет.ПолучитьОбласть("Строка|КолонкаКег"); 
			ЗаполнитьЗначенияСвойств(Строка.Параметры,ТаблицаВсяТара[НомерСтрокиКеги1]);
			Строка.Параметры.Количество=0;
			НомерСтрокиКеги1 = НомерСтрокиКеги1 + 1;
		ИначеЕсли НомерСтрокиКеги1 = КоличествоДляТаблицыТары1 И НомерСтрокиКеги2 = -1 Тогда
			//подписи к первой таблице
			Если ПодписиПерваяТаблица = 1 Тогда 
				Строка = Макет.ПолучитьОбласть("ПодвалОтгружено1|КолонкаКег"); 
				ПодписиПерваяТаблица = ПодписиПерваяТаблица + 1;
			ИначеЕсли ПодписиПерваяТаблица = 2 Тогда	
				Строка = Макет.ПолучитьОбласть("ПодвалОтгружено2|КолонкаКег"); 
				ПодписиПерваяТаблица = ПодписиПерваяТаблица + 1;
			ИначеЕсли ПодписиПерваяТаблица = 3 Тогда	
				Строка = Макет.ПолучитьОбласть("ПодвалДата|КолонкаКег"); 
				ПодписиПерваяТаблица = ПодписиПерваяТаблица + 1;
			ИначеЕсли ПодписиПерваяТаблица = 4 Тогда	
			//шапка ко второй таблице	
				Строка = Макет.ПолучитьОбласть("ШапкаКеги1|КолонкаКег"); 
				ПодписиПерваяТаблица = ПодписиПерваяТаблица + 1;
			ИначеЕсли ПодписиПерваяТаблица = 5 Тогда	
				Строка = Макет.ПолучитьОбласть("ШапкаКеги2|КолонкаКег"); 
				ПодписиПерваяТаблица = ПодписиПерваяТаблица + 1;
			ИначеЕсли ПодписиПерваяТаблица = 6 Тогда	
				Строка = Макет.ПолучитьОбласть("ШапкаКеги3|КолонкаКег"); 
				ПодписиПерваяТаблица = ПодписиПерваяТаблица + 1;
				НомерСтрокиКеги2 = 0;
				ПодписиПерваяТаблица = 1;
				ТаблицаВсяТара = ПолучитьТаблицуТары(Истина);
			КонецЕсли;	
		ИначеЕсли НомерСтрокиКеги1 = КоличествоДляТаблицыТары1 И НомерСтрокиКеги2 < КоличествоДляТаблицыТары2 Тогда
			Строка = Макет.ПолучитьОбласть("Строка|КолонкаКег"); 
			ЗаполнитьЗначенияСвойств(Строка.Параметры,ТаблицаВсяТара[НомерСтрокиКеги2]);
			Строка.Параметры.Количество=0;
			НомерСтрокиКеги2 = НомерСтрокиКеги2 + 1;
		ИначеЕсли НомерСтрокиКеги2 = КоличествоДляТаблицыТары2 И ПодписиПерваяТаблица <= 3 Тогда 
			Если ПодписиПерваяТаблица = 1 Тогда 
				Строка = Макет.ПолучитьОбласть("ПодвалСдано1|КолонкаКег"); 
				ПодписиПерваяТаблица = ПодписиПерваяТаблица + 1;
			ИначеЕсли ПодписиПерваяТаблица = 2 Тогда	
				Строка = Макет.ПолучитьОбласть("ПодвалСдано2|КолонкаКег"); 
				ПодписиПерваяТаблица = ПодписиПерваяТаблица + 1;
			ИначеЕсли ПодписиПерваяТаблица = 3 Тогда	
				Строка = Макет.ПолучитьОбласть("ПодвалДата|КолонкаКег"); 
				ПодписиПерваяТаблица = ПодписиПерваяТаблица + 1;
			КонецЕсли;
		Иначе
			Строка = Макет.ПолучитьОбласть("ПустаяСтрока|КолонкаКег"); 
		КонецЕсли;
		ТабДокумент.Вывести(Строка);
		Если сч = 1 Тогда 
			ОбластьИтого=Макет.ПолучитьОбласть("Итого|ОсновнаяЧасть");
			ОбластьИтого.Параметры.СуммаИтого=СуммаИтого;
			ОбластьИтого.Параметры.Итого50=Итого50;
			ОбластьИтого.Параметры.ИтогоБал=ИтогоБал;
			ОбластьИтого.Параметры.ИтогоПрочее=ИтогоПрочее;
			ТабДокумент.Присоединить(ОбластьИтого);
		КонецЕсли;
	КонецЦикла;
	//20120918 Лямкина Юлия 
	
	ОбластьПодвал=Макет.ПолучитьОбласть("Подвал");
	ОбластьПодвал.Параметры.ЭкспедиторДок = ВыбДокумент.Водитель;
	ТабДокумент.Вывести(ОбластьПодвал);
	//Вывод задания
	Если ВыбДокумент.ЗаданияВодителю.Количество() Тогда
		Шапка=Макет.ПолучитьОбласть("ШапкаЗаданияВодителям");
		ТабДокумент.Вывести(Шапка);
		СтрокаЗадания=Макет.ПолучитьОбласть("СтрокаЗаданиеВодителям");
		Для Каждого СтрокаТЧ Из ВыбДокумент.ЗаданияВодителю Цикл
			СтрокаЗадания.Параметры.НомерСтроки	= СтрокаТЧ.НомерСтроки;
			СтрокаЗадания.Параметры.Контрагент	= СтрокаТЧ.Контрагент;
			СтрокаЗадания.Параметры.Задание		= СтрокаТЧ.Задание;
			ТабДокумент.Вывести(СтрокаЗадания);
		КонецЦикла;
	КонецЕсли;
	
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	ОбластьАктВозврата=Макет.ПолучитьОбласть("АктВозврата");
	ТабДокумент.Вывести(ОбластьАктВозврата);
	//20120524 Лямкина Юлия
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Возврат ТабДокумент;
КонецФункции

Функция ПечатьДокументаИнфНакл(ВыбДокумент)
	ТабДокумент=Новый ТабличныйДокумент;
	
	ТабДокумент.ИмяПараметровПечати="ПАРАМЕТРЫ_ПЕЧАТИ_Информационная_Накладная";
	
	Макет = ПолучитьМакет("ИнформационнаяНакладная");
	Запрос = Новый ПостроительЗапроса;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА СписокНакладных.РеализацияТоваровУслуг.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	               |			ТОГДА СписокНакладных.РеализацияТоваровУслуг.Контрагент
	               |		ИНАЧЕ СписокНакладных.РеализацияТоваровУслуг.Грузополучатель
	               |	КОНЕЦ КАК ТорговаяТочка,
	               |	СУММА(СписокНакладных.СуммаИсток) КАК СуммаИсток,
	               |	СУММА(СписокНакладных.СуммаУслуги) КАК СуммаУслуги,
	               |	СУММА(СписокНакладных.СуммаОборудование) КАК СуммаОборудование,
	               |	СУММА(СписокНакладных.СуммаИсток + СписокНакладных.СуммаУслуги + СписокНакладных.СуммаОборудование) КАК СуммаОбщая
	               |ИЗ
	               |	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |		РеализацияТоваровУслуг.Ссылка КАК РеализацияТоваровУслуг,
	               |		ВЫБОР
	               |			КОГДА РеализацияТоваровУслуг.Склад В (&ОбщийСклад)
	               |				ТОГДА РеализацияТоваровУслуг.СуммаДокумента
	               |			ИНАЧЕ 0
	               |		КОНЕЦ КАК СуммаИсток,
	               |		0 КАК СуммаУслуги,
	               |		0 КАК СуммаОборудование
	               |	ИЗ
	               |		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	               |			ПО РеализацияТоваровУслугТовары.Ссылка = РеализацияТоваровУслуг.Ссылка
	               |	ГДЕ
	               |		РеализацияТоваровУслуг.Проведен
	               |		И НЕ РеализацияТоваровУслуг.ОтражатьВБухгалтерскомУчете
	               |		И РеализацияТоваровУслуг.Ссылка В(&СписокДокументов)
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |		РеализацияТоваровУслуг.Ссылка,
	               |		0,
	               |		РеализацияТоваровУслуг.СуммаДокумента,
	               |		0
	               |	ИЗ
	               |		Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	               |			ПО РеализацияТоваровУслугУслуги.Ссылка = РеализацияТоваровУслуг.Ссылка
	               |	ГДЕ
	               |		РеализацияТоваровУслуг.Проведен
	               |		И НЕ РеализацияТоваровУслуг.ОтражатьВБухгалтерскомУчете
	               |		И РеализацияТоваровУслуг.Ссылка В(&СписокДокументов)
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |		РеализацияТоваровУслуг.Ссылка,
	               |		0,
	               |		0,
	               |		РеализацияТоваровУслугТовары.Сумма
	               |	ИЗ
	               |		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	               |			ПО РеализацияТоваровУслугТовары.Ссылка = РеализацияТоваровУслуг.Ссылка
	               |	ГДЕ
	               |		РеализацияТоваровУслуг.Проведен
	               |		И РеализацияТоваровУслуг.ДоговорКонтрагента.ВидДоговора = &ВидДоговораПродажа
	               |		И РеализацияТоваровУслуг.Склад = &Оборудование
	               |		И НЕ РеализацияТоваровУслуг.ОтражатьВБухгалтерскомУчете
	               |		И РеализацияТоваровУслуг.Ссылка В(&СписокДокументов)) КАК СписокНакладных
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВЫБОР
	               |		КОГДА СписокНакладных.РеализацияТоваровУслуг.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	               |			ТОГДА СписокНакладных.РеализацияТоваровУслуг.Контрагент
	               |		ИНАЧЕ СписокНакладных.РеализацияТоваровУслуг.Грузополучатель
	               |	КОНЕЦ
	               |ИТОГИ
	               |	СУММА(СуммаИсток),
	               |	СУММА(СуммаУслуги),
	               |	СУММА(СуммаОборудование),
	               |	СУММА(СуммаОбщая)
	               |ПО
	               |	ОБЩИЕ";
	Склады = Новый СписокЗначений;
	Склады.Добавить(Справочники.Склады.НайтиПоКоду("000000089"));
	Склады.Добавить(Справочники.Склады.НайтиПоКоду("000000087"));
	Запрос.Параметры.Вставить("ОбщийСклад", Склады);
	Запрос.Параметры.Вставить("Оборудование", Справочники.Склады.НайтиПоКоду("000000008"));// Склад ОБОРУДОВАНИЯ
	Запрос.Параметры.Вставить("ВидДоговораПродажа", Перечисления.ВидыДоговоровКонтрагентов.СПокупателем);
	Запрос.Параметры.Вставить("СписокДокументов", ВыбДокумент.СписокДокументов.ВыгрузитьКолонку("Накладная"));
	
	ЗапросРез=Запрос.ПолучитьЗапрос();
	Результат=ЗапросРез.Выполнить();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьОбщийИтог = Макет.ПолучитьОбласть("ОбщиеИтоги");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДокумент.Очистить();
	ОбластьЗаголовок.Параметры.ТекстЗаголовка="К путевому листу № "+ВыбДокумент.Номер+" за "+ПредставлениеПериода(НачалоДня(ВыбДокумент.НачалоПериода),КонецДня(ВыбДокумент.ОкончаниеПериода));
	ОбластьЗаголовок.Параметры.Экспедитор=ВыбДокумент.Водитель.Наименование;
	ТабДокумент.Вывести(ОбластьЗаголовок);
	ТабДокумент.Вывести(ОбластьШапкаТаблицы);
	ТабДокумент.НачатьАвтогруппировкуСтрок();
	
	ВыборкаОбщийИтог = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВыборкаОбщийИтог.Следующий();		// Общий итог
	ОбластьОбщийИтог.Параметры.Заполнить(ВыборкаОбщийИтог);
	
	ВыборкаДетальныеЗаписи = ВыборкаОбщийИтог.Выбрать();
	Сч=1;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ОбластьДетальныхЗаписей.Параметры.НомерСтроки=Сч;
		ТабДокумент.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетальныеЗаписи.Уровень());
		Сч=Сч+1;
	КонецЦикла;
	
	ТабДокумент.ЗакончитьАвтогруппировкуСтрок();
	ТабДокумент.Вывести(ОбластьОбщийИтог, ВыборкаОбщийИтог.Уровень());
	
	Возврат ТабДокумент;
КонецФункции

Функция ПолучитьТаблицуТары(ДляВозврата=Ложь)
	Если ДляВозврата Тогда
		ТаблицаВсяТара = Новый ТаблицаЗначений;
		ТаблицаВсяТара.Колонки.Добавить("НаименованиеКеги");
		ТаблицаВсяТара.Колонки.Добавить("Количество");
		НоваяСтрока = ТаблицаВсяТара.Добавить();
		НоваяСтрока.НаименованиеКеги = "БАЛЛОН 10л";
		НоваяСтрока = ТаблицаВсяТара.Добавить();
		НоваяСтрока.НаименованиеКеги = "БАЛЛОН 40л";
		НоваяСтрока = ТаблицаВсяТара.Добавить();
		НоваяСтрока.НаименованиеКеги = "Пив&ко 50л";
		НоваяСтрока = ТаблицаВсяТара.Добавить();
		НоваяСтрока.НаименованиеКеги = "Крушовице 30л";
		НоваяСтрока = ТаблицаВсяТара.Добавить();
		НоваяСтрока.НаименованиеКеги = "Кега 30л ПЭТ";
		НоваяСтрока = ТаблицаВсяТара.Добавить();
		НоваяСтрока.НаименованиеКеги = "";
		НоваяСтрока = ТаблицаВсяТара.Добавить();
		НоваяСтрока.НаименованиеКеги = "";
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ЕСТЬNULL(ЗначенияСвойствОбъектов.Значение, РеализацияТоваровУслугВозвратнаяТара.Номенклатура.Наименование) КАК НаименованиеКеги,
		               |	СУММА(РеализацияТоваровУслугВозвратнаяТара.Количество) КАК Количество,
		               |	ВЫБОР
		               |		КОГДА РеализацияТоваровУслугВозвратнаяТара.Номенклатура.ЕдиницаХраненияОстатков.Объем = 0
		               |			ТОГДА ВЫБОР
		               |					КОГДА РеализацияТоваровУслугВозвратнаяТара.Номенклатура.Наименование ПОДОБНО ""%50%""
		               |						ТОГДА 50
		               |					КОГДА РеализацияТоваровУслугВозвратнаяТара.Номенклатура.Наименование ПОДОБНО ""%30%""
		               |						ТОГДА 30
		               |					КОГДА РеализацияТоваровУслугВозвратнаяТара.Номенклатура.Наименование ПОДОБНО ""%20%""
		               |						ТОГДА 20
		               |					КОГДА РеализацияТоваровУслугВозвратнаяТара.Номенклатура.Наименование ПОДОБНО ""%25%""
		               |						ТОГДА 25
		               |				КОНЕЦ
		               |		ИНАЧЕ РеализацияТоваровУслугВозвратнаяТара.Номенклатура.ЕдиницаХраненияОстатков.Объем
		               |	КОНЕЦ КАК Объем
		               |ПОМЕСТИТЬ ВТ_ОборотТары
		               |ИЗ
		               |	Документ.МаршрутныйЛист.СписокДокументов КАК МаршрутныйЛистСписокДокументов
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.МаршрутныйЛист КАК МаршрутныйЛист
		               |		ПО МаршрутныйЛистСписокДокументов.Ссылка = МаршрутныйЛист.Ссылка
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.ВозвратнаяТара КАК РеализацияТоваровУслугВозвратнаяТара
		               |				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		               |				ПО РеализацияТоваровУслугВозвратнаяТара.Номенклатура = ЗначенияСвойствОбъектов.Объект
		               |					И (ЗначенияСвойствОбъектов.Свойство = &НаимДляПечати)
		               |			ПО (РеализацияТоваровУслугВозвратнаяТара.Ссылка = РеализацияТоваровУслуг.Ссылка)
		               |		ПО МаршрутныйЛистСписокДокументов.Накладная = РеализацияТоваровУслуг.ДокументОснование
		               |ГДЕ
		               |	МаршрутныйЛист.Ссылка = &Ссылка
		               |	И РеализацияТоваровУслуг.Проведен
		               |	И РеализацияТоваровУслугВозвратнаяТара.Номенклатура ЕСТЬ НЕ NULL 
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ЕСТЬNULL(ЗначенияСвойствОбъектов.Значение, РеализацияТоваровУслугВозвратнаяТара.Номенклатура.Наименование),
		               |	ВЫБОР
		               |		КОГДА РеализацияТоваровУслугВозвратнаяТара.Номенклатура.ЕдиницаХраненияОстатков.Объем = 0
		               |			ТОГДА ВЫБОР
		               |					КОГДА РеализацияТоваровУслугВозвратнаяТара.Номенклатура.Наименование ПОДОБНО ""%50%""
		               |						ТОГДА 50
		               |					КОГДА РеализацияТоваровУслугВозвратнаяТара.Номенклатура.Наименование ПОДОБНО ""%30%""
		               |						ТОГДА 30
		               |					КОГДА РеализацияТоваровУслугВозвратнаяТара.Номенклатура.Наименование ПОДОБНО ""%20%""
		               |						ТОГДА 20
		               |					КОГДА РеализацияТоваровУслугВозвратнаяТара.Номенклатура.Наименование ПОДОБНО ""%25%""
		               |						ТОГДА 25
		               |				КОНЕЦ
		               |		ИНАЧЕ РеализацияТоваровУслугВозвратнаяТара.Номенклатура.ЕдиницаХраненияОстатков.Объем
		               |	КОНЕЦ
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	РеализацияТоваровУслугТовар.Номенклатура.ЕдиницаИзмеренияМест.Объем КАК ОбъемТовара,
		               |	СУММА(РеализацияТоваровУслугТовар.Количество / РеализацияТоваровУслугТовар.Номенклатура.ЕдиницаИзмеренияМест.Объем) КАК Количество
		               |ПОМЕСТИТЬ ВТ_ОборотТовара
		               |ИЗ
		               |	Документ.МаршрутныйЛист.СписокДокументов КАК МаршрутныйЛистСписокДокументов
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.МаршрутныйЛист КАК МаршрутныйЛист
		               |		ПО МаршрутныйЛистСписокДокументов.Ссылка = МаршрутныйЛист.Ссылка
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовар
		               |			ПО (РеализацияТоваровУслугТовар.Ссылка = РеализацияТоваровУслуг.Ссылка)
		               |		ПО МаршрутныйЛистСписокДокументов.Накладная = РеализацияТоваровУслуг.Ссылка
		               |ГДЕ
		               |	МаршрутныйЛист.Ссылка = &Ссылка
		               |	И РеализацияТоваровУслугТовар.Номенклатура В ИЕРАРХИИ(&ПивоРозлив)
		               |	И РеализацияТоваровУслуг.Проведен
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	РеализацияТоваровУслугТовар.Номенклатура.ЕдиницаИзмеренияМест.Объем
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВложенныйЗапрос.ОбъемТовара КАК Объем,
		               |	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
		               |	""Прочее"" КАК НаименованиеКеги
		               |ИЗ
		               |	(ВЫБРАТЬ
		               |		ВТ_ОборотТовара.ОбъемТовара КАК ОбъемТовара,
		               |		ВТ_ОборотТовара.Количество КАК Количество
		               |	ИЗ
		               |		ВТ_ОборотТовара КАК ВТ_ОборотТовара
		               |	
		               |	ОБЪЕДИНИТЬ ВСЕ
		               |	
		               |	ВЫБРАТЬ
		               |		ВТ_ОборотТары.Объем,
		               |		-ВТ_ОборотТары.Количество
		               |	ИЗ
		               |		ВТ_ОборотТары КАК ВТ_ОборотТары) КАК ВложенныйЗапрос
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВложенныйЗапрос.ОбъемТовара
		               |
		               |ИМЕЮЩИЕ
		               |	СУММА(ВложенныйЗапрос.Количество) > 0
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	ВТ_ОборотТары.Объем,
		               |	ВТ_ОборотТары.Количество,
		               |	ВТ_ОборотТары.НаименованиеКеги
		               |ИЗ
		               |	ВТ_ОборотТары КАК ВТ_ОборотТары";
		
		Запрос.УстановитьПараметр("НаимДляПечати", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Наименование для печати"));
		Запрос.УстановитьПараметр("Ссылка", СсылкаНаОбъект);
		Запрос.УстановитьПараметр("ПивоРозлив",Справочники.ИТИКонстанты.РазливноеПиво.Указатель);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ТаблицаВсяТара=РезультатЗапроса.Выгрузить();
		Для Каждого СтрокаТЧ Из ТаблицаВсяТара Цикл
			Если СтрокаТЧ.НаименованиеКеги="Прочее" Тогда
				СтрокаТЧ.НаименованиеКеги="ПЭТ ("+СтрокаТЧ.Объем+"л.)";
			КонецЕсли;
		КонецЦикла;
		ТаблицаВсяТара.Колонки.Удалить("Объем");
		НоваяСтрока = ТаблицаВсяТара.Добавить();
		НоваяСтрока.НаименованиеКеги = "";
		НоваяСтрока = ТаблицаВсяТара.Добавить();
		НоваяСтрока.НаименованиеКеги = "";
	КонецЕсли;
		
	Возврат ТаблицаВсяТара;
КонецФункции // ПолучитьТаблицуТары()


// Внешняя функция печати
// КТ-2000: (095)789-3070
// Параметры
//  ИмяМакета  – Строка – имя формы печати
//
// Возвращаемое значение:
//   Булево   –Печать прошла успешно - Истина, иначе - Ложь
//
Функция Печать(ИмяМакета = "", ПараметрыПечати = Неопределено) Экспорт

	Если Не ЗначениеЗаполнено(СсылкаНаОбъект) Тогда
		Возврат Ложь;
	ИначеЕсли СсылкаНаОбъект.ВидОперации<>Перечисления.ВидыМаршрутныхЛистов.ПоКонтрагентам Тогда
		Сообщить("Эта печатная форма предназначена для печати марш. листов по реализациям без самовывоза");
		Возврат Ложь;
	КонецЕсли;
	
	ТабДокумент		= Новый ТабличныйДокумент;
	ТабДокументМЛ	= ПечатьДокументаМЛ(СсылкаНаОбъект);
	ТабДокументИН	= ПечатьДокументаИнфНакл(СсылкаНаОбъект);
	
	ТабДокумент.Вывести(ТабДокументМЛ);
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	ТабДокумент.Вывести(ТабДокументИН);
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Маршрутный_лист";
	
	//Определим параметры печати
	Если ПараметрыПечати <> Неопределено Тогда
		КоличествоЭкземпляров = 1;
		Если НЕ(ПараметрыПечати.Свойство("КоличествоЭкземпляров",КоличествоЭкземпляров)) Тогда
			КоличествоЭкземпляров = 1;			
		КонецЕсли;
		НаПринтер = Ложь;
		Если НЕ(ПараметрыПечати.Свойство("НаПринтер",НаПринтер)) Тогда
			НаПринтер = Ложь;			
		КонецЕсли;
	КонецЕсли;
	Если КоличествоЭкземпляров = Неопределено Тогда
		КоличествоЭкземпляров = 1;
	КонецЕсли;
	Если НаПринтер = Неопределено Тогда
		НаПринтер = Ложь;
	КонецЕсли;
//---КТ-2000-(095)789-3070---Олег-27.06.05
	//НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, СформироватьЗаголовокДокумента(ВыбОбъект));
	Возврат ТабДокумент;
//---КТ-2000-(095)789-3070---Олег-27.06.05

КонецФункции // Печать()


// Возвращает информацию о внешней форме
// КТ-2000: (095)789-3070
// Возвращаемое значение:
//   Структура   – информация о форме
//
Функция ИнформацияОВнешнейФорме() Экспорт

	ИнформацияОФорме = Новый Структура;
	
	ИнформацияОФорме.Вставить("ВидФормы", ВидФормы);
	ИнформацияОФорме.Вставить("НаименованиеФормы", НаименованиеФормы);
	ИнформацияОФорме.Вставить("РелизФормы", РелизФормы);
	ИнформацияОФорме.Вставить("ДатаИзмененияФормы", ДатаИзмененияФормы);
	ИнформацияОФорме.Вставить("КомментарийФормы", КомментарийФормы);
	
	Возврат ИнформацияОФорме;

КонецФункции // ИнформацияОВнешнейФорме()

//Информация о форме
ВидФормы 			= Перечисления.ВидыДополнительныхВнешнихОбработок.ПечатнаяФорма;
НаименованиеФормы	= "Шаблон";
РелизФормы			= "0.0";
ДатаИзмененияФормы	= '20140101';
КомментарийФормы	= "Шаблон";
НазваниеКнопки		= "Шаблон";
НазваниеМеню		= "Шаблон";
//Попытка
	//КартинкаКнопки 		= Метаданные.ОбщиеКартинки.СправкиАиБ;
//Исключение
	КартинкаКнопки		= Неопределено;
//КонецПопытки;

мВалютаРегламентированногоУчета   = глЗначениеПеременной("ВалютаРегламентированногоУчета");
