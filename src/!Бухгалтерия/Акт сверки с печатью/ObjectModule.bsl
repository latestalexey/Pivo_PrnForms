Функция Печать() Экспорт
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АктСверкиВзаиморасчетов_АктСверки";
	Макет  = ПолучитьМакет("АктСверки");

	ОбластьЗаголовок    = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьНачОстатки   = Макет.ПолучитьОбласть("НачОстатки");
	ОбластьДоговор      = Макет.ПолучитьОбласть("Договор");
	ОбластьДоговорИтоги = Макет.ПолучитьОбласть("ДоговорИтоги");
	ОбластьОбороты      = Макет.ПолучитьОбласть("Обороты");
	ОбластьОборотыИтог  = Макет.ПолучитьОбласть("ОборотыИтог");
	ОбластьКонОстатки   = Макет.ПолучитьОбласть("КонОстатки");
	ОбластьПодвал       = Макет.ПолучитьОбласть("Подвал");
	
	СведенияОбОрганизации    = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(СсылкаНаОбъект.Организация, СсылкаНаОбъект.Дата);
	ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,");
	
	СведенияОКонтрагенте     = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(СсылкаНаОбъект.Контрагент, СсылкаНаОбъект.Дата);
	ПредставлениеКонтрагента = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОКонтрагенте, "НаименованиеДляПечатныхФорм,");
	
	ОбластьЗаголовок.Параметры.НазваниеОрганизации     = ПредставлениеОрганизации;
	ОбластьЗаголовок.Параметры.НаименованиеКонтрагента = ПредставлениеКонтрагента;
	Если СсылкаНаОбъект.ДатаНачала = '00010101' Тогда
		Если СсылкаНаОбъект.ПоДаннымОрганизации.Количество()>0 Тогда
			ДатаНачалаОтчета=СсылкаНаОбъект.ПоДаннымОрганизации[0].СсылкаНаОбъект.Дата;
		Иначе
			ДатаНачалаОтчета = '00010101';
		КонецЕсли;
	Иначе
		ДатаНачалаОтчета = СсылкаНаОбъект.ДатаНачала;
	КонецЕсли;

	ОписаниеПериода = "за период: " + ПредставлениеПериода(НачалоДня(ДатаНачалаОтчета), КонецДня(СсылкаНаОбъект.ДатаОкончания), "ФП = Истина");
	
	ТекстЗаголовка = "взаимных расчетов " + ОписаниеПериода  + Символы.ПС
					+ "между " + ПредставлениеОрганизации + Символы.ПС + "и " + ПредставлениеКонтрагента;
	Если ЗначениеЗаполнено(СсылкаНаОбъект.ДоговорКонтрагента) Тогда
		Если СсылкаНаОбъект.ДоговорКонтрагента.ЭтоГруппа Тогда
			МассивДоговоров = СсылкаНаОбъект.ПоДаннымОрганизации.ВыгрузитьКолонку("Договор");
			МассивДоговоров = ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(МассивДоговоров);
			ТекстЗаголовка = ТекстЗаголовка + Символы.ПС + "по договору ";
			ТекстДоговоров = "";
			Для каждого ТекДоговор Из МассивДоговоров Цикл
				ТекстДоговоров = ТекстДоговоров + ?(ПустаяСтрока(ТекстДоговоров), "", ", ") + ТекДоговор;
			КонецЦикла; 
			ТекстЗаголовка = ТекстЗаголовка + ТекстДоговоров;
		Иначе
		    ТекстЗаголовка = ТекстЗаголовка + Символы.ПС + "по договору " + СсылкаНаОбъект.ДоговорКонтрагента;
		КонецЕсли;
	КонецЕсли;
	
	ОбластьЗаголовок.Параметры.ТекстЗаголовка = ТекстЗаголовка;
	
	ДанныеПредставителяОрганизации = ОбщегоНазначения.ДанныеФизЛица(СсылкаНаОбъект.Организация, СсылкаНаОбъект.ПредставительОрганизации, СсылкаНаОбъект.Дата);
	ФИОПредставителя = ?(НЕ ЗначениеЗаполнено(ДанныеПредставителяОрганизации.Фамилия),"",ДанныеПредставителяОрганизации.Фамилия
					+ ?(НЕ ЗначениеЗаполнено(ДанныеПредставителяОрганизации.Имя),""," "+ДанныеПредставителяОрганизации.Имя)
					+ ?(НЕ ЗначениеЗаполнено(ДанныеПредставителяОрганизации.Отчество),""," "+ДанныеПредставителяОрганизации.Отчество));
	
	СтрЗаголовокТаблица = "Мы, нижеподписавшиеся, " + ?(НЕ ЗначениеЗаполнено(ДанныеПредставителяОрганизации.Должность),"________________",ДанныеПредставителяОрганизации.Должность) + " " + ПредставлениеОрганизации
				+ " " + ?(ФИОПредставителя<>"",ФИОПредставителя,"_______________________") + ", с одной стороны, "
				+ "и " + ?(НЕ ЗначениеЗаполнено(СсылкаНаОбъект.ПредставительКонтрагента.Должность),"________________",СсылкаНаОбъект.ПредставительКонтрагента.Должность) + " " + ПредставлениеКонтрагента + " " 
				+ ?(НЕ ЗначениеЗаполнено(СсылкаНаОбъект.ПредставительКонтрагента),"_______________________",СсылкаНаОбъект.ПредставительКонтрагента) + ", с другой стороны, "
				+ "составили настоящий акт сверки в том, что состояние взаимных расчетов по данным учета следующее:";
	
	ОбластьЗаголовок.Параметры.СтрЗаголовокТаблица = СтрЗаголовокТаблица;
	ОбластьЗаголовок.Параметры.ВалютаДокумента = СсылкаНаОбъект.ВалютаДокумента;
	
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	
	ОбластьНачОстатки.Параметры.СуммаНачальныйОстатокДт = ?(СсылкаНаОбъект.ОстатокНаНачало > 0, СсылкаНаОбъект.ОстатокНаНачало, 0);
	ОбластьНачОстатки.Параметры.СуммаНачальныйОстатокКт = ?(СсылкаНаОбъект.ОстатокНаНачало < 0, -СсылкаНаОбъект.ОстатокНаНачало, 0);
	ТабДок.Вывести(ОбластьНачОстатки);
	
	ОборотыДт = 0;
	ОборотыКт = 0;
	ОборотыДтКонтр = 0;
	ОборотыКтКонтр = 0;

		
	Если СсылкаНаОбъект.ПоДаннымОрганизации.Количество()>0 ИЛИ СсылкаНаОбъект.ПоДаннымКонтрагента.Количество()>0 Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
		Запрос.Текст =	
		"ВЫБРАТЬ
		|	ВлЗапрос.Договор КАК Договор,
		|	ВлЗапрос.Дата КАК Дата,
		|	ВлЗапрос.Документ,
		|	ВлЗапрос.Представление,
		|	ВлЗапрос.ДатаК,
		|	ВлЗапрос.ПредставлениеК,
		|	Дебет как СуммаДогДт,
		|	Кредит как СуммаДогКт,
		|	ДебетК как СуммаДогДтКонтр,
		|	КредитК как СуммаДогКтКонтр	
		|Из
		|	(Выбрать"
		+?(СсылкаНаОбъект.РазбитьПоДоговорам,"
		|		ПоДаннымОрганизации.Договор КАК Договор,","
		|		NULL КАК Договор,")
		+"	
		|		ПоДаннымОрганизации.Дата как Дата,
		|		NUll как ДатаК,
		|		ПоДаннымОрганизации.Документ КАК Документ,
		|		ПоДаннымОрганизации.Представление КАК Представление,
		|		NULL КАК ПредставлениеК,
		|		ПоДаннымОрганизации.Дебет КАК Дебет,
		|		ПоДаннымОрганизации.Кредит КАК Кредит,
		|		0 КАК ДебетК,
		|		0 КАК КредитК,
		|		ПоДаннымОрганизации.НомерСтроки КАК НомерСтроки,
		|		0 КАК НомерТабЧасти
		|	ИЗ
		|		Документ.АктСверкиВзаиморасчетов.ПоДаннымОрганизации КАК ПоДаннымОрганизации
		|	Где
		|		ПоДаннымОрганизации.Ссылка = &ТекущийДокумент
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|   
		|	Выбрать"
		+?(СсылкаНаОбъект.РазбитьПоДоговорам,"
		|		ПоДаннымКонтрагента.Договор,","
		|		NULL КАК Договор,")
		+"	
		|		NULL,
		|		ПоДаннымКонтрагента.Дата,
		|		NULL,
		|		NULL,
		|		ПоДаннымКонтрагента.Представление,
		|		0,
		|		0,
		|		ПоДаннымКонтрагента.Дебет,
		|		ПоДаннымКонтрагента.Кредит,
		|		ПоДаннымКонтрагента.НомерСтроки КАК НомерСтроки,
		|		1 КАК НомерТабЧасти
		|
		|	ИЗ
		|		Документ.АктСверкиВзаиморасчетов.ПоДаннымКонтрагента КАК ПоДаннымКонтрагента
		|	Где
		|		ПоДаннымКонтрагента.Ссылка = &ТекущийДокумент
		|     
		|     
		|)	КАК ВлЗапрос
		|	УПОРЯДОЧИТЬ ПО НомерТабЧасти,НомерСтроки
		|
		|	ИТОГИ
		|		СУММА(СуммаДогДт),
		|		СУММА(СуммаДогКт),
		|		СУММА(СуммаДогДтКонтр),
		|		СУММА(СуммаДогКтКонтр)
		|	ПО
		|		Общие,Договор";
		
		Результат = Запрос.Выполнить();		
		
		ОбходПоОбщимИтогам = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Общие");
		ОбходПоОбщимИтогам.Следующий();	
		
		ОборотыДт = ОбходПоОбщимИтогам.СуммаДогДт;
		ОборотыКт = ОбходПоОбщимИтогам.СуммаДогКт;
		ОборотыДтКонтр = ОбходПоОбщимИтогам.СуммаДогДтКонтр;
		ОборотыКтКонтр = ОбходПоОбщимИтогам.СуммаДогКтКонтр;

		
		ОбходПоДоговорам = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Договор");
		Пока ОбходПоДоговорам.Следующий() Цикл
			
			Если СсылкаНаОбъект.РазбитьПоДоговорам Тогда
				//Выводим заголовок с договором
				ОбластьДоговор.Параметры.Договор = ОбходПоДоговорам.Договор;
				ОбластьДоговор.Параметры.Регистратор = ОбходПоДоговорам.Договор;
				ТабДок.Вывести(ОбластьДоговор);
				ОбходПоДокументам=ОбходПоДоговорам.Выбрать();
			Иначе
				ОбходПоДокументам=Результат.Выбрать();
			КонецЕсли;		
			
			//Создадим список документов по организации и контрагенту
			СписокДокументов = новый массив;
			СписокДокументовК = новый массив;
			Пока ОбходПоДокументам.Следующий() Цикл
				Если ОбходПоДокументам.Дата<>NULL Тогда
					СписокДокументов.Добавить(новый структура("ДатаДокумента,РегистраторПредставление,Регистратор,СуммаОборотДт,СуммаОборотКт",
					ОбходПоДокументам.Дата,ОбходПоДокументам.Представление,ОбходПоДокументам.Документ,ОбходПоДокументам.СуммаДогДт,ОбходПоДокументам.СуммаДогКт));				
				КонецЕсли;
				
				Если ОбходПоДокументам.ДатаК<>NULL Тогда
					СписокДокументовК.Добавить(новый структура("ДатаДокументаКонтр,РегистраторПредставлениеКонтр,СуммаОборотДтКонтр,СуммаОборотКтКонтр",
					ОбходПоДокументам.ДатаК,ОбходПоДокументам.ПредставлениеК,ОбходПоДокументам.СуммаДогДтКонтр,ОбходПоДокументам.СуммаДогКтКонтр));				
				КонецЕсли; 
			КонецЦикла;
			
			//Для упрощения вывода, сравним списки по количеству элементов, добавив пустые
			МаксИндекс = Макс(СписокДокументов.Количество(), СписокДокументовК.Количество())-1;
			МинИндекс = Мин(СписокДокументов.Количество(), СписокДокументовК.Количество())-1;
			Если СписокДокументов.Количество()<СписокДокументовК.Количество() Тогда
				Для инд = МинИндекс По МаксИндекс-1 Цикл
					СписокДокументов.Добавить(новый структура("ДатаДокумента,РегистраторПредставление,Регистратор,СуммаОборотДт,СуммаОборотКт","","","","",""));
				КонецЦикла;
			ИначеЕсли СписокДокументов.Количество()>СписокДокументовК.Количество() Тогда 
				Для инд = МинИндекс По МаксИндекс-1 Цикл
					СписокДокументовК.Добавить(новый структура("ДатаДокументаКонтр,РегистраторПредставлениеКонтр,СуммаОборотДтКонтр,СуммаОборотКтКонтр","","","",""));
				КонецЦикла;			
			КонецЕсли;
			
			Для Инд = 0 По МаксИндекс Цикл
				ОбластьОбороты.Параметры.Заполнить(СписокДокументов[Инд]);
				ОбластьОбороты.Параметры.Заполнить(СписокДокументовК[Инд]);			
				ТабДок.Вывести(ОбластьОбороты);
			КонецЦикла;
			
			Если СсылкаНаОбъект.РазбитьПоДоговорам Тогда
				//Выводим итоги по каждому договору
				ОбластьДоговорИтоги.Параметры.Заполнить(ОбходПоДоговорам);		
				ТабДок.Вывести(ОбластьДоговорИтоги);	
			Иначе
				Прервать;
			КонецЕсли;
			
		КонецЦикла;  
		
		ОбластьОборотыИтог.Параметры.СуммаОборотДт      = ОборотыДт;
		ОбластьОборотыИтог.Параметры.СуммаОборотКт      = ОборотыКт;
		Если СсылкаНаОбъект.СверкаСогласована тогда
			ОбластьОборотыИтог.Параметры.СуммаОборотДтКонтр = ОборотыДтКонтр;
			ОбластьОборотыИтог.Параметры.СуммаОборотКтКонтр = ОборотыКтКонтр;
		КонецЕсли;
		ТабДок.Вывести(ОбластьОборотыИтог);
		
	КонецЕсли;
	      
	ОстатокНаКонец = СсылкаНаОбъект.ОстатокНаНачало + ОборотыДт -  ОборотыКт;
	ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокДт = ?(ОстатокНаКонец > 0, ОстатокНаКонец, 0);
	ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокКт = ?(ОстатокНаКонец < 0, -ОстатокНаКонец, 0);
	
	Если СсылкаНаОбъект.СверкаСогласована тогда
		ОстатокНаКонецК = СсылкаНаОбъект.ОстатокНаНачало - ОборотыДтКонтр +  ОборотыКтКонтр;
		ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокКтКонтр = ?(ОстатокНаКонецК > 0, ОстатокНаКонецК, 0);
		ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокДтКонтр = ?(ОстатокНаКонецК < 0, -ОстатокНаКонецК, 0);
	КонецЕсли;
	
	ТабДок.Вывести(ОбластьКонОстатки);
	
	// Результаты сверки
  	Если НЕ ЗначениеЗаполнено(СсылкаНаОбъект.ДатаОкончания) Тогда
   	    РезультатыСверки = "<не указана дата сверки>";
   	ИначеЕсли НЕ ЗначениеЗаполнено(СсылкаНаОбъект.Контрагент) Тогда
   	    РезультатыСверки = "<не указан контрагент>";
   	Иначе
		РезультатыСверки = "на " + Формат(СсылкаНаОбъект.ДатаОкончания, "ДФ=dd.MM.yyyy") + " задолженность ";
			
	   	Если ОстатокНаКонец > 0 Тогда
			РезультатыСверки = РезультатыСверки + "в пользу " + ПредставлениеОрганизации + " " 
								+ Формат(ОстатокНаКонец, "ЧЦ=21; ЧДЦ=2") + " " 
								+ строка(СсылкаНаОбъект.ВалютаДокумента)
								+" ("+ФормированиеПечатныхФорм.ФорматироватьСуммуПрописьюПлатежногоДокумента(ОстатокНаКонец, СсылкаНаОбъект.ВалютаДокумента,Ложь)+")" ;
	
	   	ИначеЕсли ОстатокНаКонец < 0 Тогда
			РезультатыСверки = РезультатыСверки + "в пользу " + ПредставлениеКонтрагента + " " 
								+ Формат(-ОстатокНаКонец, "ЧЦ=21; ЧДЦ=2") + " " 
								+ строка(СсылкаНаОбъект.ВалютаДокумента)
								+" ("+ФормированиеПечатныхФорм.ФорматироватьСуммуПрописьюПлатежногоДокумента(-ОстатокНаКонец, СсылкаНаОбъект.ВалютаДокумента,Ложь)+")" ;
	
	   	Иначе
	   		РезультатыСверки = РезультатыСверки + "отсутствует.";
	   	КонецЕсли;
	КонецЕсли;
	ОбластьПодвал.Параметры.РезультатыСверки = РезультатыСверки;
	
	Если СсылкаНаОбъект.СверкаСогласована тогда
		ОбластьПодвал.Параметры.ПоДаннымКонтрагента = "По данным " + ПредставлениеКонтрагента;
		
	  	Если НЕ ЗначениеЗаполнено(СсылкаНаОбъект.ДатаОкончания) Тогда
	   	    РезультатыСверки = "<не указана дата сверки>";
	   	ИначеЕсли НЕ ЗначениеЗаполнено(СсылкаНаОбъект.Контрагент) Тогда
	   	    РезультатыСверки = "<не указан контрагент>";
	   	Иначе
			РезультатыСверки = "на " + Формат(СсылкаНаОбъект.ДатаОкончания, "ДФ=dd.MM.yyyy") + " задолженность ";
				
		   	Если ОстатокНаКонецК > 0 Тогда
				РезультатыСверки = РезультатыСверки + "в пользу " + ПредставлениеОрганизации + " " 
									+ Формат(ОстатокНаКонецК, "ЧЦ=21; ЧДЦ=2") + " " 
									+ строка(СсылкаНаОбъект.ВалютаДокумента)
									+" ("+ФормированиеПечатныхФорм.ФорматироватьСуммуПрописьюПлатежногоДокумента(ОстатокНаКонецК, СсылкаНаОбъект.ВалютаДокумента,Ложь)+")" ;

		
		   	ИначеЕсли ОстатокНаКонецК < 0 Тогда
				РезультатыСверки = РезультатыСверки + "в пользу " + ПредставлениеКонтрагента + " " 
									+ Формат(-ОстатокНаКонецК, "ЧЦ=21; ЧДЦ=2") + " " 
									+ строка(СсылкаНаОбъект.ВалютаДокумента)
									+" ("+ФормированиеПечатныхФорм.ФорматироватьСуммуПрописьюПлатежногоДокумента(-ОстатокНаКонецК, СсылкаНаОбъект.ВалютаДокумента,Ложь)+")" ;

		
		   	Иначе
		   		РезультатыСверки = РезультатыСверки + "отсутствует.";
		   	КонецЕсли;
	   	КонецЕсли;
		
		ОбластьПодвал.Параметры.РезультатыСверкиК = РезультатыСверки;
		
		Если СсылкаНаОбъект.Расхождение<>0 Тогда                                                                                                                                                                                                                                                               
			 ИтогСверки = "В результате сверки выявлено расхождение информации о состоянии расчетов в размере "
			 			+Формат(?(СсылкаНаОбъект.Расхождение>0,1,-1)*СсылкаНаОбъект.Расхождение, "ЧЦ=21; ЧДЦ=2") 
						+" "+ Строка(СсылкаНаОбъект.ВалютаДокумента)
						+" ("+ФормированиеПечатныхФорм.ФорматироватьСуммуПрописьюПлатежногоДокумента(?(СсылкаНаОбъект.Расхождение>0,1,-1)*СсылкаНаОбъект.Расхождение, СсылкаНаОбъект.ВалютаДокумента,Ложь)+")" ;
			 ОбластьПодвал.Параметры.ИтогСверки = Символы.ПС+ ИтогСверки+Символы.ПС+" ";
		КонецЕсли; 
	КонецЕсли;
	              
	ОбластьПодвал.Параметры.НазваниеОрганизации     = ПредставлениеОрганизации;
	ОбластьПодвал.Параметры.НаименованиеКонтрагента = ПредставлениеКонтрагента;
	Руководители=ОбщегоНазначения.ОтветственныеЛица(СсылкаНаОбъект.Организация,СсылкаНаОбъект.Дата);
	ОбластьПодвал.Параметры.ДолжностьК = ?(НЕ ЗначениеЗаполнено(СсылкаНаОбъект.ПредставительКонтрагента.Должность),"________________",СсылкаНаОбъект.ПредставительКонтрагента.Должность);
	
	Исполнитель=ПолучитьИсполнителяПоОрганизации(СсылкаНаОбъект.Организация,СсылкаНаОбъект.Дата);
	Если Исполнитель=Неопределено Тогда
		ОбластьПодвал.Параметры.Должность  = ?(НЕ ЗначениеЗаполнено(Руководители.РуководительДолжность),"________________",Руководители.РуководительДолжность);
		ОбластьПодвал.Параметры.ФИОПредставителя  = "("+?(НЕ ЗначениеЗаполнено(Руководители.Руководитель),"_______________________",Руководители.Руководитель)+")";
	Иначе
		ОбластьПодвал.Параметры.Должность  = Исполнитель.ИсполнительДолжность;
		ОбластьПодвал.Параметры.ФИОПредставителя  = "("+Исполнитель.ИсполнительФио+")";
	КонецЕсли;
		
	ОбластьПодвал.Параметры.ФИОПредставителяК = "("+?(НЕ ЗначениеЗаполнено(СсылкаНаОбъект.ПредставительКонтрагента),"_______________________",ОбщегоНазначения.ФамилияИнициалыФизЛица(СсылкаНаОбъект.ПредставительКонтрагента.Фамилия + " " + СсылкаНаОбъект.ПредставительКонтрагента.Имя + " " + СсылкаНаОбъект.ПредставительКонтрагента.Отчество))+")";
	//Вывод подписи и печати
	КартинкаПечать=СсылкаНаОбъект.Организация.Печать.Получить();
	Если КартинкаПечать<>Неопределено Тогда
		ОбластьПодвал.Рисунки.Печать.Картинка=КартинкаПечать;
	КонецЕсли;
	КартинкаПодпись=СсылкаНаОбъект.Организация.Подпись.Получить();
	Если КартинкаПодпись<>Неопределено Тогда
		ОбластьПодвал.Рисунки.Подпись.Картинка=КартинкаПодпись;
	КонецЕсли;
	ТабДок.Вывести(ОбластьПодвал);
	
	Возврат ТабДок;
КонецФункции

Функция ПолучитьИсполнителяПоОрганизации(Организация,Дата)
	Результат = Новый Структура("Исполнитель, ИсполнительДолжность, ИсполнительФИО, ИсполнительПредставление");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо,
		|	ОтветственныеЛицаОрганизацийСрезПоследних.Должность
		|ИЗ
		|	РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(
		|			&ДатаСреза,
		|			СтруктурнаяЕдиница = &Организация
		|				И ОтветственноеЛицо = &Исполнитель) КАК ОтветственныеЛицаОрганизацийСрезПоследних";
	
	Запрос.УстановитьПараметр("ДатаСреза", Дата);
	Запрос.УстановитьПараметр("Исполнитель", Перечисления.ОтветственныеЛицаОрганизаций.Исполнитель);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		Результат.Исполнитель=ВыборкаДетальныеЗаписи.ФизическоеЛицо;
		Результат.ИсполнительДолжность=ВыборкаДетальныеЗаписи.Должность;
		Результат.ИсполнительФИО=ОбщегоНазначения.ФамилияИнициалыФизЛица(ВыборкаДетальныеЗаписи.ФизическоеЛицо);
		Результат.ИсполнительПредставление=Строка(ВыборкаДетальныеЗаписи.ФизическоеЛицо);
		
		Возврат Результат;
	КонецЕсли;
	Возврат Неопределено;	
КонецФункции